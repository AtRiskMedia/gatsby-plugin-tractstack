{"version":3,"sources":["src/lexer.js"],"names":["ESCAPED","DOUBLEQUOTE","BRACKETLEFT","BRACKETRIGHT","SEMICOLON","NEWLINE","WHITESPACE","lispLexer","payload","inString","tokens","curToken","i","length","char","charAt","tokenized","remaining","substring","push","includes"],"mappings":"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","sourcesContent":["const ESCAPED = `\\\\`;\nconst DOUBLEQUOTE = `\"`;\nconst BRACKETLEFT = `(`;\nconst BRACKETRIGHT = `)`;\nconst SEMICOLON = `;`;\nconst NEWLINE = `\\n`;\nconst WHITESPACE = [\" \", \"\\n\", \"\\t\"];\n\nfunction lispLexer(payload = \"\", inString = false) {\n  const tokens = [];\n  let curToken = \"\";\n\n  for (let i = 0; i < payload.length; i++) {\n    const char = payload.charAt(i);\n    if (char === DOUBLEQUOTE && inString === false) {\n      const [tokenized, remaining] = lispLexer(payload.substring(i + 1), true);\n      tokens.push(tokenized);\n      payload = remaining;\n      i = -1;\n    } else if (char === DOUBLEQUOTE) {\n      if (curToken.length) {\n        tokens.push(+curToken || curToken);\n      }\n      return [tokens, payload.substring(i + 1)];\n    } else if (char === BRACKETLEFT) {\n      if (inString && payload?.charAt(i - 1) === ESCAPED) throw \"PARSING ERROR\";\n      const [tokenized, remaining] = lispLexer(payload.substring(i + 1));\n      tokens.push(tokenized);\n      payload = remaining;\n      i = -1;\n    } else if (char === BRACKETRIGHT) {\n      if (inString && payload?.charAt(i - 1) === ESCAPED) throw \"PARSING ERROR\";\n      if (curToken.length) {\n        tokens.push(+curToken || curToken);\n      }\n      return [tokens, payload.substring(i + 1)];\n    } else if (char === SEMICOLON) {\n      // skip comments\n      while (payload.charAt(i) !== NEWLINE) {\n        i++;\n      }\n    } else if (WHITESPACE.includes(char) && inString !== true) {\n      if (curToken.length) {\n        tokens.push(+curToken || curToken);\n      }\n      curToken = \"\";\n    } else {\n      curToken += char;\n    }\n  }\n  return [tokens, \"\"];\n}\n\nexport { lispLexer };\n"],"file":"lexer.js"}