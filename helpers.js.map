{"version":3,"sources":["src/helpers.js"],"names":["React","toH","h","styled","graphql","useStaticQuery","getImage","GatsbyImage","convertToBgImage","BackgroundImage","StyledWrapper","div","props","css","InjectGatsbyBackgroundImage","imageData","alt_text","index","parent_css","zIndex","image","bgImage","parseInt","InjectGatsbyBackgroundVideo","id","url","InjectSvg","publicURL","MarkdownParagraph","htmlAst","html","children","filter","child","type","map","i","tag","Object","entries","tagName","gatsbyImageData","thisImageData","matchImage","properties","src","alt","__html","outerHTML","getStoryStepGraph","graph","targetId","edges","e","node"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toH } from \"hast-to-hyperscript\";\nimport h from \"hyperscript\";\nimport styled from \"styled-components\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { convertToBgImage } from \"gbimage-bridge\";\nimport BackgroundImage from \"gatsby-background-image\";\n\nconst StyledWrapper = styled.div`\n  ${(props) => props.css};\n`;\n\nconst InjectGatsbyBackgroundImage = (\n  imageData,\n  alt_text,\n  index,\n  parent_css,\n  css,\n  zIndex\n) => {\n  const image = getImage(imageData);\n  const bgImage = convertToBgImage(image);\n  return (\n    <div className=\"paneFragment\" key={index}>\n      <StyledWrapper\n        css={parent_css + \"z-index:\" + parseInt(zIndex) + \";\" + css}\n      >\n        <BackgroundImage Tag=\"section\" {...bgImage} preserveStackingContext>\n          <div>\n            <GatsbyImage image={image} alt={alt_text} />\n          </div>\n        </BackgroundImage>\n      </StyledWrapper>\n    </div>\n  );\n};\n\nconst InjectGatsbyBackgroundVideo = (\n  id,\n  url,\n  alt_text,\n  index,\n  parent_css,\n  css,\n  zIndex\n) => {\n  return (\n    <StyledWrapper\n      className=\"paneFragment\"\n      key={index}\n      css={parent_css + \"z-index:\" + parseInt(zIndex) + \";\" + css}\n    >\n      <video autoPlay={true} muted loop id={id} title={alt_text}>\n        <source src={url} type=\"video/mp4\" />\n      </video>\n    </StyledWrapper>\n  );\n};\n\nconst InjectSvg = (publicURL, alt_text, index, parent_css, css, zIndex) => {\n  return (\n    <StyledWrapper\n      className=\"paneFragment\"\n      key={index}\n      css={parent_css + \"z-index:\" + parseInt(zIndex) + \";\" + css}\n    >\n      <img src={publicURL} alt={alt_text} className=\"paneFragmentCSS\" />\n    </StyledWrapper>\n  );\n};\n\nconst MarkdownParagraph = (\n  htmlAst,\n  imageData = [],\n  index,\n  parent_css,\n  css,\n  zIndex\n) => {\n  const html = htmlAst.children\n    .filter((child) => child?.type && child.type === \"element\")\n    .map((child, index) => {\n      for (const [i, tag] of Object.entries(child.children)) {\n        if (tag?.tagName && tag.tagName === \"img\") {\n          const gatsbyImageData = child.children.map((image) => {\n            let thisImageData = imageData.filter(\n              (matchImage) => matchImage[1] === image?.properties?.src\n            );\n            if (thisImageData && thisImageData[0] && thisImageData[0][2]) {\n              return (\n                <GatsbyImage\n                  key={thisImageData[0][0]}\n                  alt={image.properties.alt}\n                  image={thisImageData[0][2]}\n                />\n              );\n            }\n          });\n          // only supports one image each with its own dedicated paragraph\n          return gatsbyImageData[0];\n        }\n      }\n      // otherwise this tag is not an image\n      return (\n        <div\n          key={index}\n          dangerouslySetInnerHTML={{ __html: toH(h, child).outerHTML }}\n        />\n      );\n    });\n  return (\n    <StyledWrapper\n      key={index}\n      className=\"paneFragment\"\n      css={parent_css + \"z-index:\" + parseInt(zIndex) + \";\" + css}\n    >\n      {html}\n    </StyledWrapper>\n  );\n};\n\nconst getStoryStepGraph = (graph, targetId) => {\n  return graph.edges.filter((e) => e?.node?.id === targetId)[0];\n};\n\nexport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  getStoryStepGraph,\n};\n"],"file":"helpers.js"}