{"version":3,"sources":["src/helpers.js"],"names":["React","sanitize","styled","graphql","useStaticQuery","Link","getImage","GatsbyImage","convertToBgImage","BackgroundImage","SvgPane","HtmlAstToReact","children","imageData","naked","contents","raw","fragment","map","e","index","type","value","tagName","Tag","properties","href","pass","extcheck","src","match","this_imageData","filter","image","filename","localFile","childImageSharp","gatsbyImageData","alt","p","i","length","props","list","li","console","log","StyledWrapperDiv","div","css","StyledWrapperSection","section","PaneFragment","id","child","InjectSvgShape","shape","viewport","parent_css","zIndex","parseInt","InjectSvg","url","alt_text","InjectGatsbyBackgroundImage","bgImage","InjectGatsbyBackgroundVideo","child_css","MarkdownParagraph","htmlAst","paragraph","getStoryStepGraph","graph","targetId","edges","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,IAAlC,QAA8C,QAA9C;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,SAAS,GAAG,EAAvB,EAA2BC,KAAK,GAAG,KAAnC,KAA6C;AAClE;AACA;AACA,MAAIC,QAAJ,EAAcC,GAAd;AACA,QAAMC,QAAQ,GAAGL,QAAQ,CAACM,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC1C,QAAID,CAAC,EAAEE,IAAH,KAAY,MAAhB,EAAwB,oBAAO;AAAM,MAAA,GAAG,EAAED;AAAX,OAAmBD,CAAC,EAAEG,KAAtB,CAAP;;AACxB,YAAQH,CAAC,EAAEI,OAAX;AACE,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACE,cAAMC,GAAG,GAAGL,CAAC,EAAEI,OAAf;AACA,4BACE;AAAK,UAAA,GAAG,EAAEH;AAAV,wBACE,oBAAC,GAAD,QAAMD,CAAC,EAAEP,QAAH,CAAY,CAAZ,EAAeU,KAArB,CADF,CADF;;AAMF,WAAK,IAAL;AACE,4BAAO;AAAI,UAAA,GAAG,EAAEF;AAAT,UAAP;;AAEF,WAAK,IAAL;AACE,YAAI,OAAOD,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAAvB,KAAiC,QAArC,EAA+C;AAC7C,8BAAO;AAAI,YAAA,GAAG,EAAEF;AAAT,aAAiBD,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAAjC,CAAP;AACD;;AACD;;AAEF,WAAK,QAAL;AACE,YAAI,OAAOH,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAAvB,KAAiC,QAArC,EAA+C;AAC7C,8BAAO;AAAQ,YAAA,GAAG,EAAEF;AAAb,aAAqBD,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAArC,CAAP;AACD;;AACD;;AAEF,WAAK,GAAL;AACE,YACE,OAAOH,CAAC,EAAEM,UAAH,EAAeC,IAAtB,KAA+B,QAA/B,IACAP,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBS,IAAhB,KAAyB,MADzB,IAEA,OAAOF,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAAvB,KAAiC,QAHnC,EAIE;AACA;AACA;AACA,8BACE,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAEH,CAAC,EAAEM,UAAH,EAAeC,IAAzB;AAA+B,YAAA,GAAG,EAAEN;AAApC,aACGD,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KADnB,CADF;AAKD;;AACD;;AAEF,WAAK,KAAL;AACE;AACA,YAAIK,IAAI,GAAG,iBAAX;AACA,YAAIC,QAAQ,GAAGT,CAAC,EAAEM,UAAH,EAAeI,GAAf,EAAoBC,KAApB,CAA0BH,IAA1B,CAAf;;AACA,YAAIC,QAAQ,KAAKA,QAAQ,CAAC,CAAD,CAAR,KAAgB,MAAhB,IAA0BA,QAAQ,CAAC,CAAD,CAAR,KAAgB,MAA/C,CAAZ,EAAoE;AAClE;AACA,cAAIG,cAAc,GAAGlB,SAAS,CAACmB,MAAV,CAClBC,KAAD,IAAWA,KAAK,CAACC,QAAN,KAAmBf,CAAC,EAAEM,UAAH,EAAeI,GAD1B,EAEnB,CAFmB,GAEfM,SAFe,EAEJC,eAFI,EAEaC,eAFlC;AAGA,8BACE,oBAAC,WAAD;AACE,YAAA,GAAG,EAAEjB,KADP;AAEE,YAAA,GAAG,EAAED,CAAC,EAAEM,UAAH,EAAea,GAFtB;AAGE,YAAA,KAAK,EAAEP;AAHT,YADF;AAOD;;AACD;;AAEF,WAAK,GAAL;AACEhB,QAAAA,QAAQ,GAAGI,CAAC,EAAEP,QAAH,EAAaM,GAAb,CAAiB,CAACqB,CAAD,EAAIC,CAAJ,KAAU;AACpC;AACA,iBAAO7B,cAAc,CAAC,CAAC4B,CAAD,CAAD,EAAM1B,SAAN,CAArB;AACD,SAHU,CAAX,CADF,CAKE;;AACA,YAAIE,QAAQ,CAAC0B,MAAT,KAAoB,CAApB,IAAyB1B,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,EAAe2B,KAAf,EAAsBT,KAAnD,EAA0D;AACxD,8BAAO;AAAK,YAAA,GAAG,EAAEb;AAAV,aAAkBL,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAAlB,CAAP;AACD;;AACD,4BACE;AAAK,UAAA,GAAG,EAAEK;AAAV,wBACE,+BAAIL,QAAJ,CADF,CADF;;AAMF,WAAK,IAAL;AACA,WAAK,IAAL;AACEC,QAAAA,GAAG,GAAGG,CAAC,EAAEP,QAAH,CAAYoB,MAAZ,CACHb,CAAD,IAAO,EAAEA,CAAC,CAACE,IAAF,KAAW,MAAX,IAAqBF,CAAC,CAACG,KAAF,KAAY,IAAnC,CADH,CAAN;AAGAP,QAAAA,QAAQ,GAAGJ,cAAc,CAACK,GAAD,EAAMH,SAAN,CAAzB;AACA,YAAI8B,IAAJ;AACA,YAAIxB,CAAC,EAAEI,OAAH,KAAe,IAAnB,EAAyBoB,IAAI,gBAAG,gCAAK5B,QAAL,CAAP;AACzB,YAAII,CAAC,EAAEI,OAAH,KAAe,IAAnB,EAAyBoB,IAAI,gBAAG,gCAAK5B,QAAL,CAAP;AACzB,4BAAO;AAAK,UAAA,GAAG,EAAEK;AAAV,WAAkBuB,IAAlB,CAAP;;AAEF,WAAK,IAAL;AACE5B,QAAAA,QAAQ,GAAGI,CAAC,EAAEP,QAAH,EAAaM,GAAb,CAAiB,CAAC0B,EAAD,EAAKJ,CAAL,KAAW;AACrC;AACA,iBAAO7B,cAAc,CAAC,CAACiC,EAAD,CAAD,EAAO/B,SAAP,CAArB;AACD,SAHU,CAAX;AAIA,4BAAO;AAAI,UAAA,GAAG,EAAEO;AAAT,WAAiBL,QAAjB,CAAP;;AAEF,WAAK,YAAL;AACEC,QAAAA,GAAG,GAAGG,CAAC,EAAEP,QAAH,CAAYoB,MAAZ,CACHb,CAAD,IAAO,EAAEA,CAAC,CAACE,IAAF,KAAW,MAAX,IAAqBF,CAAC,CAACG,KAAF,KAAY,IAAnC,CADH,CAAN;AAGA,YAAIP,QAAQ,GAAGJ,cAAc,CAACK,GAAD,EAAMH,SAAN,CAA7B;;AACA,YAAI,OAAOM,CAAC,EAAEP,QAAH,CAAY,CAAZ,GAAgBU,KAAvB,KAAiC,QAArC,EAA+C;AAC7C,8BAAO;AAAY,YAAA,GAAG,EAAEF;AAAjB,aAAyBL,QAAzB,CAAP;AACD;;AACD;;AAEF;AACE8B,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC3B,CAAnC;AA5GJ;AA8GD,GAhHgB,CAAjB;AAiHA,SAAOF,QAAP;AACD,CAtHD;;AAwHA,MAAM8B,gBAAgB,GAAG7C,MAAM,CAAC8C,GAAI;AACpC,IAAKN,KAAD,IAAWA,KAAK,CAACO,GAAI;AACzB,CAFA;AAGA,MAAMC,oBAAoB,GAAGhD,MAAM,CAACiD,OAAQ;AAC5C,IAAKT,KAAD,IAAWA,KAAK,CAACO,GAAI;AACzB,CAFA;;AAIA,MAAMG,YAAY,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYL,GAAZ,KAAoB;AACvC,sBACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEI,EAAvB;AAA2B,IAAA,GAAG,EAAEJ;AAAhC,KACGK,KADH,CADF;AAKD,CAND,C,CAQA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,CAACF,EAAD,EAAKG,KAAL,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,MAAlC,KAA6C;AAClE,MAAIV,GAAG,GAAI,GAAES,UAAW,aAAYE,QAAQ,CAACD,MAAD,CAAS,GAArD;AACA,MAAIL,KAAK,GAAG5C,OAAO,CAAC8C,KAAD,EAAQC,QAAR,CAAnB;AACA,SAAOL,YAAY,CAACC,EAAD,EAAKC,KAAL,EAAYL,GAAZ,CAAnB;AACD,CAJD;;AAMA,MAAMY,SAAS,GAAG,CAACR,EAAD,EAAKS,GAAL,EAAUC,QAAV,EAAoBL,UAApB,EAAgCC,MAAhC,KAA2C;AAC3D,MAAIV,GAAG,GAAI,GAAES,UAAW,aAAYE,QAAQ,CAACD,MAAD,CAAS,GAArD;AACA,MAAIL,KAAK,gBAAG;AAAK,IAAA,GAAG,EAAEQ,GAAV;AAAe,IAAA,GAAG,EAAEC,QAApB;AAA8B,IAAA,SAAS,EAAC;AAAxC,IAAZ;AACA,SAAOX,YAAY,CAACC,EAAD,EAAKC,KAAL,EAAYL,GAAZ,CAAnB;AACD,CAJD;;AAMA,MAAMe,2BAA2B,GAAG,CAClCX,EADkC,EAElCxC,SAFkC,EAGlCkD,QAHkC,EAIlCL,UAAU,GAAG,EAJqB,EAKlCC,MALkC,KAM/B;AACH,QAAM5B,cAAc,GAAGzB,QAAQ,CAACO,SAAD,CAA/B;AACA,QAAMoD,OAAO,GAAGzD,gBAAgB,CAACuB,cAAD,CAAhC;AAEA,MAAIkB,GAAG,GAAI,YAAWW,QAAQ,CAACD,MAAD,CAAS,WAAUD,UAAW,IAA5D;AACA,MAAIJ,KAAK,gBACP,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAC;AAArB,KAAmCW,OAAnC;AAA4C,IAAA,uBAAuB;AAAnE,mBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAElC,cAApB;AAAoC,IAAA,GAAG,EAAEgC;AAAzC,IADF,CADF,CADF;AAOA,SAAOX,YAAY,CAACC,EAAD,EAAKC,KAAL,EAAYL,GAAZ,CAAnB;AACD,CAnBD;;AAqBA,MAAMiB,2BAA2B,GAAG,CAClCb,EADkC,EAElCS,GAFkC,EAGlCC,QAHkC,EAIlCL,UAAU,GAAG,EAJqB,EAKlCS,SAAS,GAAG,EALsB,EAMlCR,MANkC,KAO/B;AACH,MAAIV,GAAG,GAAI,GAAES,UAAW,aAAYE,QAAQ,CAACD,MAAD,CAAS,KAAIQ,SAAU,EAAnE;AACA,MAAIb,KAAK,gBACP;AACE,IAAA,QAAQ,EAAE,IADZ;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,EAAE,EAAED,EAJN;AAKE,IAAA,KAAK,EAAEU,QALT;AAME,IAAA,SAAS,EAAC;AANZ,kBAQE;AAAQ,IAAA,GAAG,EAAED,GAAb;AAAkB,IAAA,IAAI,EAAC;AAAvB,IARF,CADF;AAYA,SAAOV,YAAY,CAACC,EAAD,EAAKC,KAAL,EAAYL,GAAZ,CAAnB;AACD,CAtBD;;AAwBA,MAAMmB,iBAAiB,GAAG,CACxBf,EADwB,EAExBgB,OAFwB,EAGxBxD,SAAS,GAAG,EAHY,EAIxB6C,UAAU,GAAG,EAJW,EAKxBS,SAAS,GAAG,EALY,EAMxBR,MANwB,KAOrB;AACH,QAAMW,SAAS,GAAG3D,cAAc,CAAC0D,OAAO,EAAEzD,QAAV,EAAoBC,SAApB,CAAhC;AACA,MAAIoC,GAAG,GAAI,eAAcS,UAAW,aAAYE,QAAQ,CACtDD,MADsD,CAEtD,KAAIQ,SAAU,EAFhB;AAGA,SAAOf,YAAY,CAACC,EAAD,EAAKiB,SAAL,EAAgBrB,GAAhB,CAAnB;AACD,CAbD;;AAeA,MAAMsB,iBAAiB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAOD,KAAK,EAAEE,KAAP,EAAc1C,MAAd,CAAsBb,CAAD,IAAOA,CAAC,EAAEwD,IAAH,EAAStB,EAAT,KAAgBoB,QAA5C,EAAsD,CAAtD,CAAP;AACD,CAFD;;AAIA,SACEL,iBADF,EAEEJ,2BAFF,EAGEE,2BAHF,EAIEL,SAJF,EAKEN,cALF,EAMER,gBANF,EAOEG,oBAPF,EAQEE,YARF,EASEmB,iBATF","sourcesContent":["import React from \"react\";\nimport { sanitize } from \"hast-util-sanitize\";\nimport styled from \"styled-components\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { convertToBgImage } from \"gbimage-bridge\";\nimport BackgroundImage from \"gatsby-background-image\";\nimport { SvgPane } from \"./shapes.js\";\n\nconst HtmlAstToReact = (children, imageData = [], naked = false) => {\n  // recursive function\n  // breaks gatsby images free of enclosing p tag\n  let contents, raw;\n  const fragment = children.map((e, index) => {\n    if (e?.type === \"text\") return <span key={index}>{e?.value}</span>;\n    switch (e?.tagName) {\n      case \"h1\":\n      case \"h2\":\n      case \"h3\":\n      case \"h4\":\n      case \"h5\":\n      case \"h6\":\n        const Tag = e?.tagName;\n        return (\n          <div key={index}>\n            <Tag>{e?.children[0].value}</Tag>\n          </div>\n        );\n\n      case \"br\":\n        return <br key={index} />;\n\n      case \"em\":\n        if (typeof e?.children[0]?.value === \"string\") {\n          return <em key={index}>{e?.children[0]?.value}</em>;\n        }\n        break;\n\n      case \"strong\":\n        if (typeof e?.children[0]?.value === \"string\") {\n          return <strong key={index}>{e?.children[0]?.value}</strong>;\n        }\n        break;\n\n      case \"a\":\n        if (\n          typeof e?.properties?.href === \"string\" &&\n          e?.children[0]?.type === \"text\" &&\n          typeof e?.children[0]?.value === \"string\"\n        ) {\n          // is this an internal link?\n          // TODO\n          return (\n            <Link to={e?.properties?.href} key={index}>\n              {e?.children[0]?.value}\n            </Link>\n          );\n        }\n        break;\n\n      case \"img\":\n        // is this case for gatsby image? = png, jpg ... != svg\n        let pass = /\\.[A-Za-z0-9]+$/;\n        let extcheck = e?.properties?.src?.match(pass);\n        if (extcheck && (extcheck[0] === \".png\" || extcheck[0] === \".jpg\")) {\n          // imageData in this case is an array ... must find correct element\n          let this_imageData = imageData.filter(\n            (image) => image.filename === e?.properties?.src\n          )[0]?.localFile?.childImageSharp?.gatsbyImageData;\n          return (\n            <GatsbyImage\n              key={index}\n              alt={e?.properties?.alt}\n              image={this_imageData}\n            />\n          );\n        }\n        break;\n\n      case \"p\":\n        contents = e?.children?.map((p, i) => {\n          // use recursion to compose the MarkdownParagraph\n          return HtmlAstToReact([p], imageData);\n        });\n        // is this an image?\n        if (contents.length === 1 && contents[0][0].props?.image) {\n          return <div key={index}>{contents[0][0]}</div>;\n        }\n        return (\n          <div key={index}>\n            <p>{contents}</p>\n          </div>\n        );\n\n      case \"ul\":\n      case \"ol\":\n        raw = e?.children.filter(\n          (e) => !(e.type === \"text\" && e.value === \"\\n\")\n        );\n        contents = HtmlAstToReact(raw, imageData);\n        let list;\n        if (e?.tagName === \"ol\") list = <ol>{contents}</ol>;\n        if (e?.tagName === \"ul\") list = <ul>{contents}</ul>;\n        return <div key={index}>{list}</div>;\n\n      case \"li\":\n        contents = e?.children?.map((li, i) => {\n          // use recursion to compose the MarkdownParagraph\n          return HtmlAstToReact([li], imageData);\n        });\n        return <li key={index}>{contents}</li>;\n\n      case \"blockquote\":\n        raw = e?.children.filter(\n          (e) => !(e.type === \"text\" && e.value === \"\\n\")\n        );\n        let contents = HtmlAstToReact(raw, imageData);\n        if (typeof e?.children[0]?.value === \"string\") {\n          return <blockquote key={index}>{contents}</blockquote>;\n        }\n        break;\n\n      default:\n        console.log(\"helpers.js: MISS on\", e);\n    }\n  });\n  return fragment;\n};\n\nconst StyledWrapperDiv = styled.div`\n  ${(props) => props.css};\n`;\nconst StyledWrapperSection = styled.section`\n  ${(props) => props.css};\n`;\n\nconst PaneFragment = (id, child, css) => {\n  return (\n    <StyledWrapperDiv key={id} css={css}>\n      {child}\n    </StyledWrapperDiv>\n  );\n};\n\n// pre-rendered svg shapes for each viewport\n// TODO\n// will rely on shapes.js\nconst InjectSvgShape = (id, shape, viewport, parent_css, zIndex) => {\n  let css = `${parent_css} z-index: ${parseInt(zIndex)};`;\n  let child = SvgPane(shape, viewport);\n  return PaneFragment(id, child, css);\n};\n\nconst InjectSvg = (id, url, alt_text, parent_css, zIndex) => {\n  let css = `${parent_css} z-index: ${parseInt(zIndex)};`;\n  let child = <img src={url} alt={alt_text} className=\"paneFragmentCSS\" />;\n  return PaneFragment(id, child, css);\n};\n\nconst InjectGatsbyBackgroundImage = (\n  id,\n  imageData,\n  alt_text,\n  parent_css = \"\",\n  zIndex\n) => {\n  const this_imageData = getImage(imageData);\n  const bgImage = convertToBgImage(this_imageData);\n\n  let css = `z-index: ${parseInt(zIndex)}; img { ${parent_css} }`;\n  let child = (\n    <BackgroundImage Tag=\"section\" {...bgImage} preserveStackingContext>\n      <div className=\"paneFragmentImage\">\n        <GatsbyImage image={this_imageData} alt={alt_text} />\n      </div>\n    </BackgroundImage>\n  );\n  return PaneFragment(id, child, css);\n};\n\nconst InjectGatsbyBackgroundVideo = (\n  id,\n  url,\n  alt_text,\n  parent_css = \"\",\n  child_css = \"\",\n  zIndex\n) => {\n  let css = `${parent_css} z-index: ${parseInt(zIndex)}; ${child_css}`;\n  let child = (\n    <video\n      autoPlay={true}\n      muted\n      loop\n      id={id}\n      title={alt_text}\n      className=\"paneFragmentVideo\"\n    >\n      <source src={url} type=\"video/mp4\" />\n    </video>\n  );\n  return PaneFragment(id, child, css);\n};\n\nconst MarkdownParagraph = (\n  id,\n  htmlAst,\n  imageData = [],\n  parent_css = \"\",\n  child_css = \"\",\n  zIndex\n) => {\n  const paragraph = HtmlAstToReact(htmlAst?.children, imageData);\n  let css = `height:100%;${parent_css} z-index: ${parseInt(\n    zIndex\n  )}; ${child_css}`;\n  return PaneFragment(id, paragraph, css);\n};\n\nconst getStoryStepGraph = (graph, targetId) => {\n  return graph?.edges?.filter((e) => e?.node?.id === targetId)[0];\n};\n\nexport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  InjectSvgShape,\n  StyledWrapperDiv,\n  StyledWrapperSection,\n  PaneFragment,\n  getStoryStepGraph,\n};\n"],"file":"helpers.js"}