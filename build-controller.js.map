{"version":3,"sources":["src/build-controller.js"],"names":["React","Link","IsVisible","SvgPane","SvgPlay","SvgRewind","TractStackLogo","lispLexer","StyledWrapperDiv","InjectCssAnimation","BuildController","data","console","log","next","prev","link","react_fragment","effects_payload","state","storyStep","storyStepGraph","field_slug","previous","controller_pane","viewport","key","prefersReducedMotion","in","css","current","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,cAAtC,QAA4D,UAA5D;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,WAArD;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAD6B,CAE7B;AACA;AACA;AACA;;AAEA,MAAIC,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,cAAtB,EAAsCC,eAAtC;AACA,MAAIP,IAAI,EAAEQ,KAAN,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCP,IAAxC,EAA8CQ,UAAlD,EACER,IAAI,GAAI,IAAGH,IAAI,EAAEQ,KAAN,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCP,IAAxC,EAA8CQ,UAAW,EAApE;AACF,MAAIX,IAAI,EAAEQ,KAAN,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCE,QAAxC,EAAkDD,UAAtD,EACEP,IAAI,GAAI,IAAGJ,IAAI,EAAEQ,KAAN,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCE,QAAxC,EAAkDD,UAAW,EAAxE;AACF,MAAIE,eAAe,GAAGrB,OAAO,CAC3B,MAD2B,EAE3BQ,IAAI,EAAEQ,KAAN,EAAaM,QAAb,EAAuBA,QAAvB,EAAiCC,GAFN,EAG3B,IAH2B,CAA7B;AAKAT,EAAAA,cAAc,gBACZ;AACE,IAAA,EAAE,EAAE,uBADN;AAEE,IAAA,SAAS,EAAG,sCAAqCN,IAAI,EAAEQ,KAAN,EAAaM,QAAb,EAAuBA,QAAvB,EAAiCC,GAAI;AAFxF,kBAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGZ,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,OAAD,OADF,CADG,GAKH,EANJ,EAQGC,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,SAAD,OADF,CADG,GAKH,EAbJ,CAJF,CADF,CAjB6B,CAyC7B;;AACA,MAAIJ,IAAI,EAAEQ,KAAN,EAAaQ,oBAAb,EAAmCA,oBAAnC,KAA4D,KAAhE,EAAuE;AACrET,IAAAA,eAAe,GAAG;AAChBU,MAAAA,EAAE,EAAE,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB;AADY,KAAlB;AAGD;;AACD,MAAIC,GAAG,GAAGpB,kBAAkB,CAACS,eAAD,EAAkB,uBAAlB,CAA5B;AACA,sBACE;AACE,IAAA,GAAG,EAAEP,IAAI,EAAEQ,KAAN,EAAaC,SAAb,EAAwBC,cAAxB,EAAwCS,OAAxC,EAAiDC,EADxD;AAEE,IAAA,SAAS,EAAC;AAFZ,kBAIE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEF;AAAvB,KAA6BZ,cAA7B,CADF,CADF,CAJF,CADF,CAhD6B,CA4D7B;AACD;;AAED,SAASP,eAAT","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { IsVisible } from \"./is-visible\";\nimport { SvgPane, SvgPlay, SvgRewind, TractStackLogo } from \"./shapes\";\nimport { lispLexer } from \"./lexer\";\nimport { StyledWrapperDiv, InjectCssAnimation } from \"./helpers\";\n\nfunction BuildController(data) {\n  console.log(\"TODO: BuildController\");\n  //\n  //const input = \"(goto (storyfragment welcome))\";\n  //const [output] = lispLexer(input);\n  //console.log(\"actions payload:\", output,actions);\n\n  let next, prev, link, react_fragment, effects_payload;\n  if (data?.state?.storyStep?.storyStepGraph?.next?.field_slug)\n    next = `/${data?.state?.storyStep?.storyStepGraph?.next?.field_slug}`;\n  if (data?.state?.storyStep?.storyStepGraph?.previous?.field_slug)\n    prev = `/${data?.state?.storyStep?.storyStepGraph?.previous?.field_slug}`;\n  let controller_pane = SvgPane(\n    \"pane\",\n    data?.state?.viewport?.viewport?.key,\n    true\n  );\n  react_fragment = (\n    <div\n      id={\"tractstack-controller\"}\n      className={`controller__view controller__view--${data?.state?.viewport?.viewport?.key}`}\n    >\n      <div className=\"controller__graph\">\n        {next ? (\n          <Link to={next}>\n            <SvgPlay />\n          </Link>\n        ) : (\n          \"\"\n        )}\n        {prev ? (\n          <Link to={prev}>\n            <SvgRewind />\n          </Link>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n\n  // can we wrap this in animation?\n  if (data?.state?.prefersReducedMotion?.prefersReducedMotion === false) {\n    effects_payload = {\n      in: [\"fadeInLeft\", 2, 1],\n    };\n  }\n  let css = InjectCssAnimation(effects_payload, \"tractstack-controller\");\n  return (\n    <section\n      key={data?.state?.storyStep?.storyStepGraph?.current?.id}\n      className=\"controller\"\n    >\n      <div className=\"controller__container\">\n        <div className=\"controller__container--view\">\n          <StyledWrapperDiv css={css}>{react_fragment}</StyledWrapperDiv>\n        </div>\n      </div>\n    </section>\n  );\n  //<div className=\"controller__container--view\">{controller_pane}</div>\n}\n\nexport { BuildController };\n"],"file":"build-controller.js"}