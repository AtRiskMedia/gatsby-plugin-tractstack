{"version":3,"sources":["src/build-controller.js"],"names":["React","Link","IsVisible","SvgPane","SvgPlay","SvgRewind","TractStackLogo","lispLexer","StyledWrapperDiv","InjectCssAnimation","BuildController","data","console","log","next","prev","link","react_fragment","effects_payload","graph","field_slug","previous","controller_pane","viewport","key","prefersReducedMotion","in","out","css","current","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,cAAtC,QAA4D,UAA5D;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,WAArD;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,IAArC,EAD6B,CAE7B;AACA;AACA;AACA;;AAEA,MAAIG,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,cAAtB,EAAsCC,eAAtC;AACA,MAAIP,IAAI,EAAEQ,KAAN,EAAaL,IAAb,EAAmBM,UAAvB,EAAmCN,IAAI,GAAI,IAAGH,IAAI,EAAEQ,KAAN,EAAaL,IAAb,EAAmBM,UAAW,EAAzC;AACnC,MAAIT,IAAI,EAAEQ,KAAN,EAAaE,QAAb,EAAuBD,UAA3B,EACEL,IAAI,GAAI,IAAGJ,IAAI,EAAEQ,KAAN,EAAaE,QAAb,EAAuBD,UAAW,EAA7C;AACF,MAAIE,eAAe,GAAGnB,OAAO,CAAC,MAAD,EAASQ,IAAI,EAAEY,QAAN,EAAgBC,GAAzB,EAA8B,IAA9B,CAA7B;AACAP,EAAAA,cAAc,gBACZ;AACE,IAAA,EAAE,EAAE,uBADN;AAEE,IAAA,SAAS,EAAG,sCAAqCN,IAAI,EAAEY,QAAN,EAAgBC,GAAI;AAFvE,kBAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGV,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,OAAD,OADF,CADG,GAKH,EANJ,EAQGC,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,SAAD,OADF,CADG,GAKH,EAbJ,CAJF,CADF,CAZ6B,CAoC7B;;AACA,MAAIJ,IAAI,EAAEc,oBAAN,KAA+B,KAAnC,EAA0C;AACxCP,IAAAA,eAAe,GAAG;AAChBQ,MAAAA,EAAE,EAAE,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB,CADY;AAEhBC,MAAAA,GAAG,EAAE;AAFW,KAAlB;AAID;;AACD,MAAIC,GAAG,GAAGnB,kBAAkB,CAACS,eAAD,EAAkB,uBAAlB,CAA5B;AACA,sBACE;AAAS,IAAA,GAAG,EAAEP,IAAI,EAAEQ,KAAN,EAAaU,OAAb,EAAsBC,EAApC;AAAwC,IAAA,SAAS,EAAC;AAAlD,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEF;AAAvB,KAA6BX,cAA7B,CADF,CADF,CADF,CADF,CA5C6B,CAqD7B;AACD;;AAED,SAASP,eAAT","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { IsVisible } from \"./is-visible\";\nimport { SvgPane, SvgPlay, SvgRewind, TractStackLogo } from \"./shapes\";\nimport { lispLexer } from \"./lexer\";\nimport { StyledWrapperDiv, InjectCssAnimation } from \"./helpers\";\n\nfunction BuildController(data) {\n  console.log(\"TODO: BuildController\", data);\n  //\n  //const input = \"(goto (storyfragment welcome))\";\n  //const [output] = lispLexer(input);\n  //console.log(\"actions payload:\", output,actions);\n\n  let next, prev, link, react_fragment, effects_payload;\n  if (data?.graph?.next?.field_slug) next = `/${data?.graph?.next?.field_slug}`;\n  if (data?.graph?.previous?.field_slug)\n    prev = `/${data?.graph?.previous?.field_slug}`;\n  let controller_pane = SvgPane(\"pane\", data?.viewport?.key, true);\n  react_fragment = (\n    <div\n      id={\"tractstack-controller\"}\n      className={`controller__view controller__view--${data?.viewport?.key}`}\n    >\n      <div className=\"controller__graph\">\n        {next ? (\n          <Link to={next}>\n            <SvgPlay />\n          </Link>\n        ) : (\n          \"\"\n        )}\n        {prev ? (\n          <Link to={prev}>\n            <SvgRewind />\n          </Link>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n\n  // can we wrap this in animation?\n  if (data?.prefersReducedMotion === false) {\n    effects_payload = {\n      in: [\"fadeInLeft\", 2, 1],\n      out: [],\n    };\n  }\n  let css = InjectCssAnimation(effects_payload, \"tractstack-controller\");\n  return (\n    <section key={data?.graph?.current?.id} className=\"controller\">\n      <div className=\"controller__container\">\n        <div className=\"controller__container--view\">\n          <StyledWrapperDiv css={css}>{react_fragment}</StyledWrapperDiv>\n        </div>\n      </div>\n    </section>\n  );\n  //<div className=\"controller__container--view\">{controller_pane}</div>\n}\n\nexport { BuildController };\n"],"file":"build-controller.js"}