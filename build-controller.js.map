{"version":3,"sources":["src/build-controller.js"],"names":["React","Link","IsVisible","SvgPlay","SvgRewind","TractStackLogo","BuildController","data","console","log","next","prev","link","react_fragment","effects_payload","graph","field_slug","previous","prefersReducedMotion","in","out","current","id","viewport","key"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,cAA7B,QAAmD,aAAnD;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,IAArC;AACA,MAAIG,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,cAAtB,EAAsCC,eAAtC;AACA,MAAIP,IAAI,EAAEQ,KAAN,EAAaL,IAAb,EAAmBM,UAAvB,EAAmCN,IAAI,GAAI,IAAGH,IAAI,EAAEQ,KAAN,EAAaL,IAAb,EAAmBM,UAAW,EAAzC;AACnC,MAAIT,IAAI,EAAEQ,KAAN,EAAaE,QAAb,EAAuBD,UAA3B,EACEL,IAAI,GAAI,IAAGJ,IAAI,EAAEQ,KAAN,EAAaE,QAAb,EAAuBD,UAAW,EAA7C;AACFH,EAAAA,cAAc,gBACZ;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,OAAD,OADF,CADG,GAKH,EANJ,EAQGC,IAAI,gBACH,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA;AAAV,kBACE,oBAAC,SAAD,OADF,CADG,GAKH,EAbJ,CADF,CAN6B,CAyB7B;;AACA,MAAIJ,IAAI,EAAEW,oBAAN,KAA+B,KAAnC,EAA0C;AACxCJ,IAAAA,eAAe,GAAG;AAChBK,MAAAA,EAAE,EAAE,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB,CADY;AAEhBC,MAAAA,GAAG,EAAE,CAAC,SAAD,EAAY,GAAZ,EAAiB,CAAjB;AAFW,KAAlB;AAIAP,IAAAA,cAAc,gBACZ,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEC;AAApB,OAAsCD,cAAtC,CADF;AAGD;;AAED,sBACE;AACE,IAAA,GAAG,EAAEN,IAAI,EAAEQ,KAAN,EAAaM,OAAb,EAAsBC,EAD7B;AAEE,IAAA,SAAS,EAAE,kCAAkCf,IAAI,EAAEgB,QAAN,EAAgBC;AAF/D,KAIGX,cAJH,CADF;AAQD;;AAED,SAASP,eAAT","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { IsVisible } from \"./is-visible.js\";\nimport { SvgPlay, SvgRewind, TractStackLogo } from \"./shapes.js\";\n\nfunction BuildController(data) {\n  console.log(\"TODO: BuildController\", data);\n  let next, prev, link, react_fragment, effects_payload;\n  if (data?.graph?.next?.field_slug) next = `/${data?.graph?.next?.field_slug}`;\n  if (data?.graph?.previous?.field_slug)\n    prev = `/${data?.graph?.previous?.field_slug}`;\n  react_fragment = (\n    <div className=\"controller__graph\">\n      {next ? (\n        <Link to={next}>\n          <SvgPlay />\n        </Link>\n      ) : (\n        \"\"\n      )}\n      {prev ? (\n        <Link to={prev}>\n          <SvgRewind />\n        </Link>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n\n  // can we wrap this in animation?\n  if (data?.prefersReducedMotion === false) {\n    effects_payload = {\n      in: [\"fadeInLeft\", 2, 1],\n      out: [\"fadeOut\", 0.5, 0],\n    };\n    react_fragment = (\n      <IsVisible effects={effects_payload}>{react_fragment}</IsVisible>\n    );\n  }\n\n  return (\n    <section\n      key={data?.graph?.current?.id}\n      className={\"controller controller__view--\" + data?.viewport?.key}\n    >\n      {react_fragment}\n    </section>\n  );\n}\n\nexport { BuildController };\n"],"file":"build-controller.js"}