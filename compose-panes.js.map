{"version":3,"file":"compose-panes.js","names":["React","useRef","renderToStaticMarkup","animateScrollTo","IsVisible","MarkdownParagraph","InjectGatsbyBackgroundImage","InjectGatsbyBackgroundVideo","InjectSvg","InjectSvgShape","InjectSvgModal","StyledWrapperDiv","InjectCssAnimation","getCurrentPane","thisViewportValue","SvgPane","SvgModal","ComposePanes","data","state","viewport","key","visiblePane","currentPane","panes","ref","document","getElementById","composedPanes","fragments","relationships","field_panes","map","pane","i","css","imageMaskShapes","textShapeOutside","modals","effects","background_colour","field_pane_fragments","filter","e","internal","type","this_selector","shape","pane_height","mobile","field_height_ratio_mobile","tablet","field_height_ratio_tablet","desktop","field_height_ratio_desktop","height_offset","field_height_offset_mobile","field_height_offset_tablet","field_height_offset_desktop","imageMaskShapeSelector","this_pane","field_image_mask_shape_mobile","field_image_mask_shape_tablet","field_image_mask_shape_desktop","console","log","selector","paneFragment","id","Boolean","composedPaneFragments","field_hidden_viewports","replace","split","indexOf","sort","a","b","field_zindex","pane_fragment","index","react_fragment","tractStackFragment","payload","tempValue","imageData","field_text_shape_outside_mobile","field_text_shape_outside_tablet","field_text_shape_outside_desktop","maskData","left_mask","right_mask","field_render_mobile","field_render_tablet","field_render_desktop","this_options","this_payload","this_fragment","this_shape","this_css","JSON","parse","render","this_viewport","device","width","field_modal_shape","modal_shape","field_css_styles_parent_mobile","field_css_styles_parent_tablet","field_css_styles_parent_desktop","Object","keys","length","fragment","z_index","parent","modalData","SyntaxError","field_shape_mobile","field_shape_tablet","field_shape_desktop","paneData","videoData","url","field_cdn_url","alt_text","field_alt_text","field_svg_file","localFile","publicURL","description","childPaneFragment","childMarkdownRemark","htmlAst","children","value","field_options","action","buttons","buttonData","field_image","this_image","this_imageData","filename","push","css_child","field_css_styles_mobile","field_css_styles_tablet","field_css_styles_desktop","css_parent","mode","child","hooksData","hooks","thisClass","field_background_colour","this_modal","parseInt","x","y","svgString","b64","window","btoa","dataUri","entries","forEach","prefersReducedMotion","this_effects_payload","in","function","speed","delay","this_effects_css"],"sources":["src/compose-panes.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport animateScrollTo from \"animated-scroll-to\";\nimport { IsVisible } from \"./is-visible.js\";\nimport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  InjectSvgShape,\n  InjectSvgModal,\n  StyledWrapperDiv,\n  InjectCssAnimation,\n  getCurrentPane,\n  thisViewportValue,\n} from \"./helpers\";\nimport { SvgPane, SvgModal } from \"./shapes\";\n\nfunction ComposePanes(data) {\n  // if viewport is not yet defined, return empty fragment\n  if (typeof data?.state?.viewport?.viewport?.key === \"undefined\") return <></>;\n  // is there a current pane to scroll to?\n  let visiblePane = getCurrentPane(\n    data?.state?.viewport?.currentPane,\n    data?.state?.viewport?.panes\n  );\n  if (visiblePane) {\n    let ref = document.getElementById(visiblePane);\n    if (ref) animateScrollTo(ref);\n  }\n\n  // loop through the panes in view and render each pane fragment\n  const composedPanes = data?.fragments?.relationships?.field_panes.map(\n    (pane, i) => {\n      let css = \"\",\n        imageMaskShapes = {},\n        textShapeOutside = {},\n        modals = {},\n        effects = [];\n      // check for background colour\n      let background_colour = pane?.relationships?.field_pane_fragments.filter(\n        (e) => e?.internal?.type === \"paragraph__background_colour\"\n      );\n      // compose this pane\n      let this_selector, shape;\n      let pane_height = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_mobile} / 100)`,\n          tablet: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_tablet} / 100)`,\n          desktop: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_desktop} / 100)`,\n        }\n      );\n      let height_offset = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: `calc((100vw - (var(--offset) * 1px)) / 600 * ${pane?.field_height_offset_mobile})`,\n          tablet: `calc((100vw - (var(--offset) * 1px)) / 1080 * ${pane?.field_height_offset_tablet})`,\n          desktop: `calc((100vw - (var(--offset) * 1px)) / 1920 * ${pane?.field_height_offset_desktop})`,\n        }\n      );\n\n      // generate imageMaskShape(s)\n      imageMaskShapes = pane?.relationships?.field_pane_fragments\n        .map((e) => {\n          let imageMaskShapeSelector;\n          let this_pane = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: e?.field_image_mask_shape_mobile,\n              tablet: e?.field_image_mask_shape_tablet,\n              desktop: e?.field_image_mask_shape_desktop,\n            }\n          );\n          if (typeof this_pane === \"string\" && this_pane !== \"none\") {\n            shape = SvgPane(this_pane, data?.state?.viewport?.viewport?.key);\n            switch (e?.internal?.type) {\n              case \"paragraph__background_video\":\n                imageMaskShapeSelector = \".paneFragmentVideo\";\n                break;\n              case \"paragraph__background_image\":\n                imageMaskShapeSelector = \".paneFragmentImage\";\n                break;\n              case \"paragraph__svg\":\n                imageMaskShapeSelector = \".paneFragmentSvg\";\n                break;\n              case \"paragraph__markdown\":\n                imageMaskShapeSelector = \".paneFragmentParagraph\";\n                break;\n              default:\n                console.log(\n                  \"compose-panes.js > imageMaskShapes: miss on\",\n                  e?.internal?.type\n                );\n            }\n          }\n          if (typeof shape === \"undefined\") return null;\n          return {\n            selector: imageMaskShapeSelector,\n            shape: shape,\n            paneFragment: e?.id,\n          };\n        })\n        .filter(Boolean);\n\n      // now compose the paneFragments for this pane\n      let composedPaneFragments = pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            e.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.state?.viewport?.viewport?.key) == -1\n        )\n        // already processed background_colour\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        // sort by zIndex ***important\n        .sort((a, b) => (a?.field_zindex > b?.field_zindex ? 1 : -1))\n        .map((pane_fragment, index) => {\n          let react_fragment,\n            tractStackFragment,\n            payload = {},\n            tempValue,\n            shape;\n          payload.imageData = [];\n\n          // pre-pass paneFragment based on type\n          switch (pane_fragment?.internal?.type) {\n            case \"paragraph__markdown\":\n              shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n                mobile: pane_fragment?.field_text_shape_outside_mobile,\n                tablet: pane_fragment?.field_text_shape_outside_tablet,\n                desktop: pane_fragment?.field_text_shape_outside_desktop,\n              });\n              // add shape outside if any\n              if (shape && shape !== \"none\") {\n                let tempValue = SvgPane(\n                  shape,\n                  data?.state?.viewport?.viewport?.key,\n                  \"shape-outside\"\n                );\n                if (tempValue)\n                  payload.maskData = {\n                    textShapeOutside: tempValue,\n                  };\n                // store shapeOutside to inject into pane\n                textShapeOutside[pane_fragment?.id] = {\n                  left_mask: tempValue?.left_mask,\n                  right_mask: tempValue?.right_mask,\n                };\n              }\n              break;\n\n            case \"paragraph__modal\":\n              tempValue = thisViewportValue(\n                data?.state?.viewport?.viewport?.key,\n                {\n                  mobile: pane_fragment?.field_render_mobile,\n                  tablet: pane_fragment?.field_render_tablet,\n                  desktop: pane_fragment?.field_render_desktop,\n                }\n              );\n              if (tempValue) {\n                let this_options,\n                  this_payload,\n                  this_fragment,\n                  this_shape,\n                  this_css;\n                try {\n                  this_options = JSON.parse(tempValue);\n                  if (typeof this_options?.render === \"object\") {\n                    this_payload = this_options?.render;\n                    this_payload.id = pane_fragment?.id;\n                    let this_viewport = {\n                      device: data?.state?.viewport?.viewport?.key,\n                      width: data?.state?.viewport?.viewport?.width,\n                    };\n                    this_payload.viewport = this_viewport;\n                    this_shape = SvgModal(\n                      pane_fragment?.field_modal_shape,\n                      data?.state?.viewport?.viewport?.key,\n                      this_payload\n                    );\n                    this_fragment = InjectSvgModal(\n                      this_shape?.modal_shape,\n                      this_payload\n                    );\n                    this_css = thisViewportValue(\n                      data?.state?.viewport?.viewport?.key,\n                      {\n                        mobile: pane_fragment?.field_css_styles_parent_mobile,\n                        tablet: pane_fragment?.field_css_styles_parent_tablet,\n                        desktop: pane_fragment?.field_css_styles_parent_desktop,\n                      }\n                    );\n                    // add modal to inject in pane later\n                    modals[Object.keys(modals).length] = {\n                      id: pane_fragment?.id,\n                      fragment: this_fragment,\n                      z_index: pane_fragment?.field_zindex,\n                      viewport: this_viewport,\n                      css: {\n                        parent: this_css,\n                      },\n                      payload: {\n                        modalData: {\n                          render: this_options?.render,\n                          shape: this_shape,\n                        },\n                      },\n                    };\n                  }\n                  // store shapeOutside to inject into pane\n                  textShapeOutside[pane_fragment?.id] = this_shape;\n                  payload.maskData = { textShapeOutside: this_shape };\n                } catch (e) {\n                  if (e instanceof SyntaxError) {\n                    console.log(\"ERROR parsing json in {}: \", e);\n                  }\n                }\n              }\n\n            case \"paragraph__background_pane\":\n              shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n                mobile: pane_fragment?.field_shape_mobile,\n                tablet: pane_fragment?.field_shape_tablet,\n                desktop: pane_fragment?.field_shape_desktop,\n              });\n              tempValue = SvgPane(shape, data?.state?.viewport?.viewport?.key);\n              if (tempValue) payload.paneData = tempValue;\n              break;\n\n            case \"paragraph__background_video\":\n              payload.videoData = {\n                url: pane_fragment?.field_cdn_url,\n                alt_text: pane_fragment?.field_alt_text,\n              };\n              break;\n\n            case \"paragraph__svg\":\n              payload.imageData = [\n                {\n                  url: pane_fragment?.relationships?.field_svg_file?.localFile\n                    ?.publicURL,\n                  alt_text: pane_fragment?.field_svg_file?.description,\n                },\n              ];\n              break;\n          }\n\n          // prepare any markdown for this paneFragment\n          if (pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst) {\n            payload.children =\n              pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst;\n            payload.children.children =\n              pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst?.children?.filter(\n                (e) => !(e.type === \"text\" && e.value === \"\\n\")\n              );\n          }\n          // extract animation effects or buttonData (if any)\n          if (typeof pane_fragment?.field_options === \"string\") {\n            let action;\n            try {\n              action = JSON.parse(pane_fragment?.field_options);\n              if (typeof tempValue?.buttons === \"object\")\n                payload.buttonData = tempValue?.buttons;\n              // effects are directly injected into each pane below\n              if (typeof action?.effects === \"object\") {\n                for (const key in action?.effects) {\n                  effects[pane_fragment?.id] = action?.effects[key];\n                  effects[pane_fragment?.id][\"paneFragment\"] =\n                    pane_fragment?.id;\n                  effects[pane_fragment?.id][\"pane\"] = pane?.id;\n                  if (pane_fragment?.internal?.type === \"paragraph__modal\") {\n                    effects[`${pane_fragment?.id}-modal`] =\n                      action?.effects[key];\n                    effects[`${pane_fragment?.id}-modal`][\n                      \"paneFragment\"\n                    ] = `${pane_fragment?.id}-modal`;\n                    effects[`${pane_fragment?.id}-modal`][\"pane\"] = pane?.id;\n                  }\n                }\n              }\n            } catch (e) {\n              if (e instanceof SyntaxError) {\n                console.log(\"ERROR parsing json in compose-panes.js: \", e);\n              }\n            }\n          }\n          // prepare any images from this paneFragment\n          pane_fragment?.relationships?.field_image?.map((e) => {\n            let this_image = thisViewportValue(\n              data?.state?.viewport?.viewport?.key,\n              {\n                mobile: e?.mobile,\n                tablet: e?.tablet,\n                desktop: e?.desktop,\n              }\n            );\n            if (this_image) {\n              let this_imageData = {\n                id: e?.id,\n                filename: e?.filename,\n                data: this_image,\n              };\n              if (typeof pane_fragment?.field_alt_text === \"string\")\n                this_imageData.alt_text = pane_fragment?.field_alt_text;\n              payload.imageData.push(this_imageData);\n            }\n          });\n          // select css for viewport\n          payload.css_child = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_css_styles_mobile || \"\",\n              tablet: pane_fragment?.field_css_styles_tablet || \"\",\n              desktop: pane_fragment?.field_css_styles_desktop || \"\",\n            }\n          );\n          payload.css_parent = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_css_styles_parent_mobile || \"\",\n              tablet: pane_fragment?.field_css_styles_parent_tablet || \"\",\n              desktop: pane_fragment?.field_css_styles_parent_desktop || \"\",\n            }\n          );\n\n          // prepare structured data for this paneFragment\n          tractStackFragment = {\n            id: pane_fragment?.id,\n            mode: pane_fragment?.internal?.type,\n            viewport: {\n              device: data?.state?.viewport?.viewport?.key,\n              width: data?.state?.viewport?.viewport?.width,\n            },\n            z_index: pane_fragment?.field_zindex,\n            children: payload?.children || {},\n            css: {\n              parent: payload?.css_parent || \"\",\n              child: payload?.css_child || \"\",\n            },\n            payload: {\n              imageData: payload?.imageData || [],\n              maskData: payload?.maskData || {},\n              hooksData: data?.hooks || {},\n              videoData: payload?.videoData || {},\n              paneData: payload?.paneData || {},\n              modalData: payload?.modalData || {},\n            },\n          };\n\n          // generate react for this paneFragment\n          switch (tractStackFragment?.mode) {\n            case \"paragraph__markdown\":\n            case \"paragraph__modal\":\n              react_fragment = MarkdownParagraph(tractStackFragment);\n              break;\n\n            case \"paragraph__background_pane\":\n              react_fragment = InjectSvgShape(tractStackFragment);\n              break;\n\n            case \"paragraph__background_image\":\n              react_fragment = InjectGatsbyBackgroundImage(tractStackFragment);\n              break;\n\n            case \"paragraph__background_video\":\n              react_fragment = InjectGatsbyBackgroundVideo(tractStackFragment);\n              break;\n\n            case \"paragraph__svg\":\n              react_fragment = InjectSvg(tractStackFragment);\n              break;\n\n            case \"paragraph__d3\":\n              //\n              break;\n\n            case \"paragraph__h5p\":\n              //\n              break;\n\n            default:\n              console.log(\n                \"MISS on compose-panes.js:\",\n                tractStackFragment?.mode\n              );\n          }\n\n          let thisClass = `paneFragment paneFragment__view--${data?.state?.viewport?.viewport?.key}`;\n          return (\n            <div className={thisClass} key={pane_fragment?.id}>\n              <IsVisible\n                id={pane_fragment?.id}\n                className=\"paneFragment\"\n                key={pane_fragment?.id}\n              >\n                {react_fragment}\n              </IsVisible>\n            </div>\n          );\n        });\n\n      // skip if empty pane\n      if (Object.keys(composedPaneFragments).length === 0) return;\n\n      // now render the pane\n      // prepare css for pane\n      css = `${css} height: ${pane_height}; margin-bottom: ${height_offset};`;\n      if (background_colour.length)\n        css = `${css} background-color: ${background_colour[0].field_background_colour};`;\n      // inject modal(s) if any\n      if (Object.keys(modals).length)\n        Object.keys(modals).map((i) => {\n          let this_modal = modals[i];\n          css =\n            `${css} ${this_modal?.css?.parent} ` +\n            `#${this_modal?.id}-svg-modal svg { ` +\n            `z-index: ${parseInt(this_modal?.z_index)};` +\n            `width: calc((100vw - (var(--offset) * 1px)) / ${this_modal?.viewport?.width} * ${this_modal?.payload?.modalData?.render?.width}); ` +\n            `padding-left: calc((100vw - (var(--offset) * 1px)) / ${this_modal?.viewport?.width} * ${this_modal?.payload?.modalData?.render?.x}); ` +\n            `padding-top: calc((100vw - (var(--offset) * 1px)) / ${this_modal?.viewport?.width} * ${this_modal?.payload?.modalData?.render?.y}); ` +\n            `}`;\n          // add this modal to composedPaneFragments\n          composedPaneFragments[Object.keys(composedPaneFragments).length] = (\n            <div\n              className={`paneFragment paneFragment__view paneFragment__view--${data?.state?.viewport?.viewport?.key}`}\n              key={`${this_modal?.id}-modal`}\n            >\n              <IsVisible\n                id={`${this_modal?.id}-modal`}\n                className=\"paneFragment\"\n                key={`${this_modal?.id}-visible`}\n              >\n                {this_modal?.fragment}\n              </IsVisible>\n            </div>\n          );\n        });\n      // inject imageMaskShape(s) (if any)\n      if (Object.keys(imageMaskShapes).length)\n        imageMaskShapes.map((e) => {\n          if (typeof e?.shape === \"object\") {\n            let svgString = renderToStaticMarkup(e?.shape);\n            let b64 = window.btoa(svgString);\n            let dataUri = `data:image/svg+xml;base64,${b64}`;\n            css =\n              `${css} ${e?.selector} {-webkit-mask-image: url(\"${dataUri}\"); mask-image: url(\"${dataUri}\");` +\n              ` mask-repeat: no-repeat; -webkit-mask-size: 100% AUTO; mask-size: 100% AUTO; }`;\n          }\n        });\n      // inject textShapeOutside(s) (if any)\n      Object.entries(textShapeOutside).forEach(([key, value]) => {\n        css =\n          `${css} #${key} .paneFragmentParagraph { svg.svg-shape-outside-left {float:left;shape-outside:url(${value?.left_mask})} ` +\n          `svg.svg-shape-outside-right {float:right;shape-outside:url(${value?.right_mask})} }`;\n      });\n\n      // may we wrap this in animation?\n      if (data?.state?.prefersReducedMotion?.prefersReducedMotion === false) {\n        for (const key in effects) {\n          if (effects[key]?.pane === pane?.id) {\n            let this_effects_payload = {\n              in: [\n                effects[key]?.function,\n                effects[key]?.speed,\n                effects[key]?.delay,\n              ],\n            };\n            let this_effects_css = InjectCssAnimation(\n              this_effects_payload,\n              effects[key]?.paneFragment\n            );\n            css = `${css} ${this_effects_css} `;\n          }\n        }\n      }\n      return (\n        <section key={pane?.id}>\n          <IsVisible id={pane?.id} hooks={data?.hooks}>\n            <StyledWrapperDiv\n              className={`pane pane__view pane__view--${data?.state?.viewport?.viewport?.key}`}\n              css={css}\n            >\n              {composedPaneFragments}\n            </StyledWrapperDiv>\n          </IsVisible>\n        </section>\n      );\n    }\n  );\n\n  // this is the storyFragment\n  return composedPanes;\n}\n\nexport { ComposePanes };\n"],"mappings":"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"}