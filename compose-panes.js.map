{"version":3,"file":"compose-panes.js","names":["React","useRef","MarkdownParagraph","InjectGatsbyBackgroundImage","InjectGatsbyBackgroundVideo","InjectSvg","InjectSvgShape","StyledWrapperDiv","InjectCssAnimation","IsVisible","ComposePanes","data","state","viewport","key","effects_css","composedPanes","fragments","relationships","field_panes","map","pane","i","background_colour","field_pane_fragments","filter","e","internal","type","composedPane","field_hidden_viewports","replace","split","indexOf","sort","a","b","field_zindex","pane_fragment","index","react_fragment","alt_text","imageData","shape","css_styles","css_styles_parent","field_css_styles_mobile","field_css_styles_parent_mobile","field_shape_mobile","field_css_styles_tablet","field_css_styles_parent_tablet","field_shape_tablet","field_css_styles_desktop","field_css_styles_parent_desktop","field_shape_desktop","action","buttonData","child","childPaneFragment","childMarkdownRemark","htmlAst","children","value","JSON","parse","field_options","buttons","SyntaxError","console","log","id","field_image","field_cdn_url","field_alt_text","field_svg_file","localFile","publicURL","description","pane_height","field_height_ratio_mobile","field_height_ratio_tablet","field_height_ratio_desktop","Object","keys","length","effects_payload","prefersReducedMotion","effects","controller","payload","in","function","speed","delay","this_effects_css","paneFragment","this_css","parseInt","field_background_colour"],"sources":["src/compose-panes.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  InjectSvgShape,\n  StyledWrapperDiv,\n  InjectCssAnimation,\n} from \"./helpers\";\nimport { IsVisible } from \"./is-visible.js\";\n\nfunction ComposePanes(data) {\n  // if viewport is not yet defined, return empty fragment\n  if (typeof data?.state?.viewport?.viewport?.key === \"undefined\") return <></>;\n\n  // loop through the panes in view and render each pane fragment\n  let effects_css = \"\";\n  const composedPanes = data?.fragments?.relationships?.field_panes.map(\n    (pane, i) => {\n      // check for background colour\n      let background_colour = pane?.relationships?.field_pane_fragments.filter(\n        (e) => e?.internal?.type === \"paragraph__background_colour\"\n      );\n\n      // now compose the paneFragments for this pane\n      let composedPane = pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            e.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.state?.viewport?.viewport?.key) == -1\n        )\n        // already processed background_colour\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        // sort by zIndex ***important\n        .sort((a, b) => (a?.field_zindex > b?.field_zindex ? 1 : -1))\n        .map((pane_fragment, index) => {\n          let react_fragment,\n            alt_text,\n            imageData,\n            shape = \"\",\n            css_styles = \"\",\n            css_styles_parent = \"\";\n\n          // select css for viewport\n          switch (data?.state?.viewport?.viewport?.key) {\n            case \"mobile\":\n              css_styles = pane_fragment?.field_css_styles_mobile;\n              css_styles_parent = pane_fragment?.field_css_styles_parent_mobile;\n              if (\n                pane_fragment?.internal?.type === \"paragraph__background_pane\"\n              )\n                shape = pane_fragment?.field_shape_mobile;\n              break;\n            case \"tablet\":\n              css_styles = pane_fragment?.field_css_styles_tablet;\n              css_styles_parent = pane_fragment?.field_css_styles_parent_tablet;\n              if (\n                pane_fragment?.internal?.type === \"paragraph__background_pane\"\n              )\n                shape = pane_fragment?.field_shape_tablet;\n              break;\n            case \"desktop\":\n              css_styles = pane_fragment?.field_css_styles_desktop;\n              css_styles_parent =\n                pane_fragment?.field_css_styles_parent_desktop;\n              if (\n                pane_fragment?.internal?.type === \"paragraph__background_pane\"\n              )\n                shape = pane_fragment?.field_shape_desktop;\n              break;\n          }\n\n          // render this paneFragment\n          switch (pane_fragment?.internal?.type) {\n            case \"paragraph__markdown\":\n              // now pre-render MarkdownParagraph elements and inject images\n              let action,\n                buttonData = {};\n              let child =\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst;\n              child.children =\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst?.children?.filter(\n                  (e) => !(e.type === \"text\" && e.value === \"\\n\")\n                );\n              try {\n                action = JSON.parse(pane_fragment?.field_options);\n                if (typeof action?.buttons === \"object\")\n                  buttonData = action?.buttons;\n              } catch (e) {\n                if (e instanceof SyntaxError) {\n                  console.log(\"ERROR parsing json in {}: \", e);\n                }\n              }\n              react_fragment = MarkdownParagraph(\n                pane_fragment?.id,\n                child,\n                pane_fragment?.relationships?.field_image,\n                buttonData,\n                css_styles_parent,\n                css_styles,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_pane\":\n              react_fragment = InjectSvgShape(\n                pane_fragment?.id,\n                shape,\n                data?.state?.viewport?.viewport?.key,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_video\":\n              react_fragment = InjectGatsbyBackgroundVideo(\n                pane_fragment?.id,\n                pane_fragment?.field_cdn_url,\n                pane_fragment?.field_alt_text,\n                css_styles_parent,\n                css_styles,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_image\":\n              react_fragment = InjectGatsbyBackgroundImage(\n                pane_fragment?.id,\n                pane_fragment?.relationships?.field_image[0] &&\n                  pane_fragment?.relationships?.field_image[0][\n                    data?.state?.viewport?.viewport?.key\n                  ],\n                pane_fragment?.field_alt_text,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__svg\":\n              react_fragment = InjectSvg(\n                pane_fragment?.id,\n                pane_fragment?.relationships?.field_svg_file?.localFile\n                  ?.publicURL,\n                pane_fragment?.field_svg_file?.description,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__d3\":\n              //\n              break;\n\n            case \"paragraph__h5p\":\n              //\n              break;\n          }\n\n          return (\n            <div className=\"paneFragment\" key={pane_fragment?.id}>\n              <IsVisible id={pane_fragment?.id}>{react_fragment}</IsVisible>\n            </div>\n          );\n        });\n\n      // compose this pane\n      let pane_height;\n      switch (data?.state?.viewport?.viewport?.key) {\n        case \"mobile\":\n          pane_height = pane?.field_height_ratio_mobile;\n          break;\n        case \"tablet\":\n          pane_height = pane?.field_height_ratio_tablet;\n          break;\n        case \"desktop\":\n          pane_height = pane?.field_height_ratio_desktop;\n          break;\n      }\n      // skip if empty pane\n      if (Object.keys(composedPane).length === 0) return;\n\n      // can we wrap this in animation?\n      let effects_payload = {};\n      if (data?.state?.prefersReducedMotion?.prefersReducedMotion === false) {\n        /*\n        // check for options payload\n        let options;\n        try {\n          options = JSON.parse(pane_fragment?.field_options);\n        } catch (e) {\n          if (e instanceof SyntaxError) {\n            console.log(\"ERROR parsing json in {}: \", e, pane_fragment);\n          }\n        }\n        let effects = options?.payload?.effects;\n        effects_payload = {\n          in: [\n            effects?.onscreen?.function,\n            effects?.onscreen?.speed,\n            effects?.onscreen?.delay\n          ]\n        };\n*/\n        let effects = data?.state?.controller?.payload?.effects;\n        let effects_payload;\n        for (const key in effects) {\n          if (effects[key]?.pane === pane?.id) {\n            // inject css animation for each\n            effects_payload = {\n              in: [\n                effects[key]?.function,\n                effects[key]?.speed,\n                effects[key]?.delay,\n              ],\n            };\n\n            let this_effects_css = InjectCssAnimation(\n              effects_payload,\n              effects[key]?.paneFragment\n            );\n            effects_css = effects_css + this_effects_css;\n          }\n        }\n      }\n\n      // prepare css for pane\n      let this_css = \"height:\" + parseInt(pane_height) + \"vw;\";\n      if (background_colour.length)\n        this_css =\n          this_css +\n          \" background-color:\" +\n          background_colour[0].field_background_colour +\n          \";\";\n\n      return (\n        <section key={pane?.id}>\n          <IsVisible id={pane?.id}>\n            <StyledWrapperDiv\n              className={\n                \"pane pane__view--\" + data?.state?.viewport?.viewport?.key\n              }\n              css={this_css + effects_css}\n            >\n              {composedPane}\n            </StyledWrapperDiv>\n          </IsVisible>\n        </section>\n      );\n    }\n  );\n  // this is the storyFragment\n  return composedPanes;\n}\n\nexport { ComposePanes };\n"],"mappings":"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"}