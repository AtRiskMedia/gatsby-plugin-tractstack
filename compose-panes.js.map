{"version":3,"file":"compose-panes.js","names":["React","useRef","renderToStaticMarkup","animateScrollTo","IsVisible","InjectPaneFragment","InjectSvgModal","StyledWrapperDiv","InjectCssAnimation","HasImageMask","HasPaneFragmentType","getCurrentPane","thisViewportValue","SvgModals","SvgShape","ComposePanes","data","state","viewport","key","visiblePane","currentPane","panes","ref","document","getElementById","composedPanes","fragments","relationships","field_panes","map","pane","i","pane_css","effects","background_colour","field_pane_fragments","filter","e","internal","type","this_selector","shape","pane_height_ratio","mobile","field_height_ratio_mobile","tablet","field_height_ratio_tablet","desktop","field_height_ratio_desktop","pane_height","pane_height_css","height_offset","field_height_offset_mobile","field_height_offset_tablet","field_height_offset_desktop","length","field_background_colour","composedPaneFragments","field_hidden_viewports","replace","split","indexOf","sort","a","b","field_zindex","pane_fragment","index","react_fragment","tractStackFragment","payload","tempValue","imageData","field_image_mask_shape_mobile","field_image_mask_shape_tablet","field_image_mask_shape_desktop","this_options","imageMaskShapeSelector","svgString","b64","window","btoa","dataUri","childPaneFragment","childMarkdownRemark","htmlAst","children","value","field_text_shape_outside_mobile","field_text_shape_outside_tablet","field_text_shape_outside_desktop","field_modal","textShapeOutside","maskData","id","left_mask","right_mask","field_options","options","this_payload","this_fragment","this_shape","this_css","this_viewport","JSON","parse","SyntaxError","console","log","render","mode","cut","width","height","z_index","field_css_styles_parent_mobile","field_css_styles_parent_tablet","field_css_styles_parent_desktop","padding_left","padding_top","push","field_shape_mobile","field_shape_tablet","field_shape_desktop","shapeData","videoData","url","field_cdn_url","alt_text","field_alt_text","field_svg_file","localFile","publicURL","description","buttons","buttonData","structuredClone","field_image","this_image","this_imageData","filename","css_child","field_css_styles_mobile","field_css_styles_tablet","field_css_styles_desktop","css_parent","device","css","parent","child","hooksData","hooks","modalData","this_pane_fragment_type","thisClass","prefersReducedMotion","this_effects_payload","in","function","speed","delay","this_effects_css","paneFragment"],"sources":["src/compose-panes.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport animateScrollTo from \"animated-scroll-to\";\nimport { IsVisible } from \"./is-visible.js\";\nimport {\n  InjectPaneFragment,\n  InjectSvgModal,\n  StyledWrapperDiv,\n  InjectCssAnimation,\n  HasImageMask,\n  HasPaneFragmentType,\n  getCurrentPane,\n  thisViewportValue,\n} from \"./helpers\";\nimport { SvgModals, SvgShape } from \"./shapes\";\n\nfunction ComposePanes(data) {\n  // if viewport is not yet defined, return empty fragment\n  if (typeof data?.state?.viewport?.viewport?.key === \"undefined\") return <></>;\n\n  // is there a current pane to scroll to?\n  let visiblePane = getCurrentPane(\n    data?.state?.viewport?.currentPane,\n    data?.state?.viewport?.panes\n  );\n  if (visiblePane) {\n    let ref = document.getElementById(visiblePane);\n    if (ref) animateScrollTo(ref);\n  }\n\n  // loop through the panes in view and render each pane fragment\n  const composedPanes = data?.fragments?.relationships?.field_panes.map(\n    (pane, i) => {\n      let pane_css = \"\",\n        effects = [];\n\n      // set key variables\n      let background_colour = pane?.relationships?.field_pane_fragments.filter(\n        (e) => e?.internal?.type === \"paragraph__background_colour\"\n      );\n      let this_selector, shape;\n      let pane_height_ratio = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: pane?.field_height_ratio_mobile,\n          tablet: pane?.field_height_ratio_tablet,\n          desktop: pane?.field_height_ratio_desktop,\n        }\n      );\n      let pane_height = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: (600 * pane_height_ratio) / 100,\n          tablet: (1080 * pane_height_ratio) / 100,\n          desktop: (1920 * pane_height_ratio) / 100,\n        }\n      );\n      let pane_height_css = `calc((100vw - (var(--offset) * 1px)) * ${pane_height_ratio} / 100)`;\n      let height_offset = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: `calc((100vw - (var(--offset) * 1px)) / 600 * ${pane?.field_height_offset_mobile})`,\n          tablet: `calc((100vw - (var(--offset) * 1px)) / 1080 * ${pane?.field_height_offset_tablet})`,\n          desktop: `calc((100vw - (var(--offset) * 1px)) / 1920 * ${pane?.field_height_offset_desktop})`,\n        }\n      );\n\n      // prepare css for pane\n      pane_css = `${pane_css} height: ${pane_height_css}; margin-bottom: ${height_offset};`;\n      if (background_colour.length)\n        pane_css = `${pane_css} background-color: ${background_colour[0].field_background_colour};`;\n\n      // now compose the paneFragments for this pane\n      let composedPaneFragments = [];\n      pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            typeof e?.field_hidden_viewports === \"string\" &&\n            e?.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.state?.viewport?.viewport?.key) == -1\n        )\n        // already processed background_colour\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        // sort by zIndex ***important\n        .sort((a, b) => (a?.field_zindex > b?.field_zindex ? 1 : -1))\n        .map((pane_fragment, index) => {\n          let react_fragment,\n            tractStackFragment,\n            payload = {},\n            tempValue,\n            shape;\n          payload.imageData = [];\n\n          // check for imageMasks\n          shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n            mobile: pane_fragment?.field_image_mask_shape_mobile,\n            tablet: pane_fragment?.field_image_mask_shape_tablet,\n            desktop: pane_fragment?.field_image_mask_shape_desktop,\n          });\n          if (typeof shape === \"string\" && shape !== \"none\") {\n            let this_options = {\n              viewport: data?.state?.viewport?.viewport,\n              pane_height: pane_height,\n            };\n            let tempValue = SvgShape(shape, this_options);\n            if (tempValue) shape = tempValue.shape;\n            let imageMaskShapeSelector =\n              HasImageMask[pane_fragment?.internal?.type];\n            if (imageMaskShapeSelector) {\n              let svgString = renderToStaticMarkup(shape);\n              let b64 = window.btoa(svgString);\n              let dataUri = `data:image/svg+xml;base64,${b64}`;\n              pane_css =\n                `${pane_css} ${imageMaskShapeSelector} {-webkit-mask-image: url(\"${dataUri}\"); mask-image: url(\"${dataUri}\");` +\n                ` mask-repeat: no-repeat; -webkit-mask-size: 100% AUTO; mask-size: 100% AUTO; }`;\n            }\n          }\n\n          // pre-pass paneFragment based on type\n          switch (pane_fragment?.internal?.type) {\n            case \"paragraph__markdown\":\n              // prepare any markdown for this paneFragment\n              if (\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst\n              ) {\n                payload.children =\n                  pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst;\n                payload.children.children =\n                  pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst?.children?.filter(\n                    (e) => !(e.type === \"text\" && e.value === \"\\n\")\n                  );\n              }\n              shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n                mobile: pane_fragment?.field_text_shape_outside_mobile,\n                tablet: pane_fragment?.field_text_shape_outside_tablet,\n                desktop: pane_fragment?.field_text_shape_outside_desktop,\n              });\n              if (shape && !pane_fragment?.field_modal) {\n                // regular markdown paragraph; add shape outside if any\n                if (shape && shape !== \"none\") {\n                  let this_options = {\n                    textShapeOutside: true,\n                    viewport: data?.state?.viewport?.viewport,\n                    pane_height: pane_height,\n                  };\n                  tempValue = SvgShape(shape, this_options);\n                  if (tempValue)\n                    payload.maskData = {\n                      textShapeOutside: tempValue,\n                    };\n                  pane_css =\n                    `${pane_css} #svg__${tempValue?.id}--shape-outside-left {float:left;shape-outside:url(${tempValue?.left_mask})} ` +\n                    `#svg__${tempValue?.id}--shape-outside-right {float:right;shape-outside:url(${tempValue?.right_mask})}`;\n                }\n              } else if (shape && pane_fragment?.field_modal) {\n                // this is a modal\n                if (typeof pane_fragment?.field_options === \"string\") {\n                  let options = {},\n                    this_payload = {},\n                    this_fragment,\n                    this_shape,\n                    this_css,\n                    this_viewport;\n                  try {\n                    options = JSON.parse(pane_fragment?.field_options);\n                  } catch (e) {\n                    if (e instanceof SyntaxError) {\n                      console.log(\"ERROR parsing json in {}: \", e);\n                    }\n                  }\n                  if (typeof options?.render === \"object\") {\n                    this_payload = {\n                      id: pane_fragment?.id,\n                      mode: \"modal\",\n                      textShapeOutside: true,\n                      viewport: data?.state?.viewport?.viewport,\n                      cut: SvgModals[shape][\"cut\"],\n                      width: SvgModals[shape][\"viewBox\"][0],\n                      height: SvgModals[shape][\"viewBox\"][1],\n                      pane_height: pane_height,\n                      z_index: pane_fragment?.field_zindex,\n                      ...options?.render[data?.state?.viewport?.viewport?.key],\n                    };\n                    this_shape = SvgShape(shape, this_payload);\n                    // generate react fragment\n                    this_fragment = InjectSvgModal(\n                      this_shape?.shape,\n                      this_payload\n                    );\n                    this_payload.shape = this_shape;\n                    this_css = thisViewportValue(\n                      data?.state?.viewport?.viewport?.key,\n                      {\n                        mobile: pane_fragment?.field_css_styles_parent_mobile,\n                        tablet: pane_fragment?.field_css_styles_parent_tablet,\n                        desktop: pane_fragment?.field_css_styles_parent_desktop,\n                      }\n                    );\n                    pane_css =\n                      `${pane_css} ${this_css} ` +\n                      `#fragment-${pane_fragment?.id} svg.svg-shape-outside-left { ` +\n                      `z-index: ${pane_fragment?.z_index - 1};` +\n                      `width: calc((100vw - (var(--offset) * 1px)) / ${\n                        this_payload?.viewport?.width\n                      } * ${\n                        this_payload?.padding_left + this_payload?.cut\n                      }); ` +\n                      `} ` +\n                      `#fragment-${pane_fragment?.id} svg.svg-shape-outside-right { ` +\n                      `z-index: ${pane_fragment?.z_index - 1};` +\n                      `width: calc((100vw - (var(--offset) * 1px)) / ${\n                        this_payload?.viewport?.width\n                      } * ${\n                        this_payload?.viewport?.width -\n                        this_payload?.width +\n                        this_payload?.cut -\n                        this_payload?.padding_left\n                      }); ` +\n                      `} ` +\n                      `#${pane_fragment?.id}-svg-modal svg { ` +\n                      `z-index: ${pane_fragment?.z_index - 1}; ` +\n                      `width: calc((100vw - (var(--offset) * 1px)) / ${this_payload?.viewport?.width} * ${this_payload?.width}); ` +\n                      `margin-left: calc((100vw - (var(--offset) * 1px)) / ${this_payload?.viewport?.width} * ${this_payload?.padding_left}); ` +\n                      `margin-top: calc((100vw - (var(--offset) * 1px)) / ${this_payload?.viewport?.width} * ${this_payload?.padding_top}); ` +\n                      `}`;\n                  }\n                  payload.maskData = { textShapeOutside: this_shape };\n                  pane_css =\n                    `${pane_css} #svg__${this_shape?.id}--shape-outside-left {float:left;shape-outside:url(${this_shape?.left_mask})} ` +\n                    `#svg__${this_shape?.id}--shape-outside-right {float:right;shape-outside:url(${this_shape?.right_mask})}`;\n                  // add modal shape to stack\n                  composedPaneFragments.push(\n                    <div\n                      className={`paneFragment paneFragment__view paneFragment__view--${data?.state?.viewport?.viewport?.key}`}\n                      key={`modal-${this_shape?.id}`}\n                    >\n                      <IsVisible\n                        id={`modal-${this_shape?.id}`}\n                        className=\"paneFragment\"\n                        key={`${this_shape?.id}-visible`}\n                      >\n                        {this_fragment}\n                      </IsVisible>\n                    </div>\n                  );\n                }\n              }\n              break;\n\n            case \"paragraph__background_pane\":\n              shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n                mobile: pane_fragment?.field_shape_mobile,\n                tablet: pane_fragment?.field_shape_tablet,\n                desktop: pane_fragment?.field_shape_desktop,\n              });\n              let this_options = {\n                viewport: data?.state?.viewport?.viewport,\n                pane_height: pane_height,\n              };\n              tempValue = SvgShape(shape, this_options);\n              if (tempValue) payload.shapeData = tempValue.shape;\n              break;\n\n            case \"paragraph__background_video\":\n              payload.videoData = {\n                url: pane_fragment?.field_cdn_url,\n                alt_text: pane_fragment?.field_alt_text,\n              };\n              break;\n\n            case \"paragraph__svg\":\n              payload.imageData = [\n                {\n                  url: pane_fragment?.relationships?.field_svg_file?.localFile\n                    ?.publicURL,\n                  alt_text: pane_fragment?.field_svg_file?.description,\n                },\n              ];\n              break;\n          }\n\n          // extract animation effects and buttonData (if any)\n          if (typeof pane_fragment?.field_options === \"string\") {\n            try {\n              tempValue = JSON.parse(pane_fragment?.field_options);\n            } catch (e) {\n              if (e instanceof SyntaxError) {\n                console.log(\"ERROR parsing json in compose-panes.js: \", e);\n              }\n            }\n            if (typeof tempValue?.buttons === \"object\")\n              payload.buttonData = tempValue?.buttons;\n            // effects are directly injected into each pane below\n            if (typeof tempValue?.effects === \"object\") {\n              for (const key in tempValue?.effects) {\n                // store animation\n                effects[`fragment-${pane_fragment?.id}`] =\n                  tempValue?.effects[key];\n                effects[`fragment-${pane_fragment?.id}`][\n                  \"paneFragment\"\n                ] = `fragment-${pane_fragment?.id}`;\n                effects[`fragment-${pane_fragment?.id}`][\"pane\"] = pane?.id;\n                // clone and store animation for modal (if any)\n                if (\n                  pane_fragment?.internal?.type === \"paragraph__modal\" ||\n                  pane_fragment?.field_modal\n                ) {\n                  effects[`modal-${pane_fragment?.id}`] = structuredClone(\n                    tempValue?.effects[key]\n                  );\n                  effects[`modal-${pane_fragment?.id}`][\n                    \"paneFragment\"\n                  ] = `modal-${pane_fragment?.id}`;\n                }\n              }\n            }\n          }\n          // prepare any images from this paneFragment\n          pane_fragment?.relationships?.field_image?.map((e) => {\n            let this_image = thisViewportValue(\n              data?.state?.viewport?.viewport?.key,\n              {\n                mobile: e?.mobile,\n                tablet: e?.tablet,\n                desktop: e?.desktop,\n              }\n            );\n            if (this_image) {\n              let this_imageData = {\n                id: e?.id,\n                filename: e?.filename,\n                data: this_image,\n              };\n              if (typeof pane_fragment?.field_alt_text === \"string\")\n                this_imageData.alt_text = pane_fragment?.field_alt_text;\n              payload.imageData.push(this_imageData);\n            }\n          });\n          // select css for viewport\n          payload.css_child = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_css_styles_mobile || \"\",\n              tablet: pane_fragment?.field_css_styles_tablet || \"\",\n              desktop: pane_fragment?.field_css_styles_desktop || \"\",\n            }\n          );\n          payload.css_parent = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_css_styles_parent_mobile || \"\",\n              tablet: pane_fragment?.field_css_styles_parent_tablet || \"\",\n              desktop: pane_fragment?.field_css_styles_parent_desktop || \"\",\n            }\n          );\n\n          // prepare structured data for this paneFragment\n          tractStackFragment = {\n            id: pane_fragment?.id,\n            mode: pane_fragment?.internal?.type,\n            viewport: {\n              device: data?.state?.viewport?.viewport?.key,\n              width: data?.state?.viewport?.viewport?.width,\n            },\n            z_index: pane_fragment?.field_zindex,\n            children: payload?.children || {},\n            css: {\n              parent: payload?.css_parent || \"\",\n              child: payload?.css_child || \"\",\n            },\n            payload: {\n              imageData: payload?.imageData || [],\n              maskData: payload?.maskData || {},\n              hooksData: data?.hooks || {},\n              videoData: payload?.videoData || {},\n              shapeData: payload?.shapeData || {},\n              modalData: payload?.modalData || {},\n              buttonData: payload?.buttonData || {},\n            },\n          };\n\n          let this_pane_fragment_type =\n            HasPaneFragmentType[tractStackFragment?.mode];\n          if (this_pane_fragment_type)\n            react_fragment = InjectPaneFragment(\n              tractStackFragment,\n              this_pane_fragment_type\n            );\n          else\n            console.log(\n              \"ERROR in compose-panes.js: pane fragment type not found.\"\n            );\n\n          // add the composed pane fragment\n          let thisClass = `paneFragment paneFragment__view paneFragment__view--${data?.state?.viewport?.viewport?.key}`;\n          composedPaneFragments.push(\n            <div className={thisClass} key={pane_fragment?.id}>\n              <IsVisible\n                id={`fragment-${pane_fragment?.id}`}\n                className=\"paneFragment\"\n                key={pane_fragment?.id}\n              >\n                {react_fragment}\n              </IsVisible>\n            </div>\n          );\n        });\n      // skip if empty pane\n      if (composedPaneFragments.length === 0) return;\n\n      // now render the pane\n\n      // may we wrap this in animation?\n      if (data?.state?.prefersReducedMotion?.prefersReducedMotion === false) {\n        for (const key in effects) {\n          let this_effects_payload = {\n            in: [\n              effects[key]?.function,\n              effects[key]?.speed,\n              effects[key]?.delay,\n            ],\n          };\n          let this_effects_css = InjectCssAnimation(\n            this_effects_payload,\n            effects[key]?.paneFragment\n          );\n          pane_css = `${pane_css} ${this_effects_css} `;\n        }\n      }\n      return (\n        <section key={pane?.id}>\n          <IsVisible id={pane?.id} hooks={data?.hooks}>\n            <StyledWrapperDiv\n              className={`pane pane__view pane__view--${data?.state?.viewport?.viewport?.key}`}\n              css={pane_css}\n            >\n              {composedPaneFragments}\n            </StyledWrapperDiv>\n          </IsVisible>\n        </section>\n      );\n    }\n  );\n  // this is the storyFragment\n  return composedPanes;\n}\n\nexport { ComposePanes };\n"],"mappings":"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"}