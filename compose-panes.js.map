{"version":3,"sources":["src/compose-panes.js"],"names":["React","useRef","sanitize","MarkdownParagraph","InjectGatsbyBackgroundImage","InjectGatsbyBackgroundVideo","InjectSvg","StyledWrapper","IsVisible","ComposePanes","data","viewport","key","composedPanes","relationships","field_panes","map","pane","i","actions","field_pane_fragments","filter","e","internal","type","field_actions_lisp","p","background_colour","field_hidden_viewports","replace","split","indexOf","composedPane","pane_fragment","index","react_fragment","alt_text","imageData","css_styles","css_styles_parent","field_css_styles_mobile","field_css_styles_parent_mobile","field_css_styles_tablet","field_css_styles_parent_tablet","field_css_styles_desktop","field_css_styles_parent_desktop","field_image","image","id","filename","localFile","childImageSharp","gatsbyImageData","htmlAst","childPaneFragment","childMarkdownRemark","field_zindex","field_cdn_url","field_alt_text","this_image_data","field_svg_file","description","publicURL","prefersReducedMotion","in","out","speed","delay","pane_height","field_height_ratio_mobile","field_height_ratio_tablet","field_height_ratio_desktop","Object","keys","length","this_css","parseInt","field_background_colour"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { sanitize } from \"hast-util-sanitize\";\nimport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  StyledWrapper,\n} from \"./helpers\";\nimport { IsVisible } from \"./is-visible.js\";\n\nfunction ComposePanes(data) {\n  // if viewport is not yet defined, return empty fragment\n  if (typeof data?.viewport?.key === \"undefined\") return <></>;\n  // loop through the panes in view and render each pane fragment\n  const composedPanes = data?.data?.relationships?.field_panes.map(\n    (pane, i) => {\n      // check for actions lisp\n      // TODO: need to parse the actions\n      const actions = pane?.relationships?.field_pane_fragments\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        .filter((e) => typeof e?.field_actions_lisp === \"string\")\n        .map((p) => {\n          return p?.field_actions_lisp;\n        });\n      // check for background colour\n      const background_colour = pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            e.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.viewport?.key) == -1\n        )\n        .filter((e) => e?.internal?.type === \"paragraph__background_colour\");\n      let composedPane = pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            e.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.viewport?.key) == -1\n        )\n        // and filter out paneFragment if background_colour\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        .map((pane_fragment, index) => {\n          let react_fragment,\n            alt_text,\n            imageData,\n            css_styles = \"\",\n            css_styles_parent = \"\";\n          switch (data?.viewport?.key) {\n            case \"mobile\":\n              css_styles = pane_fragment?.field_css_styles_mobile;\n              css_styles_parent = pane_fragment?.field_css_styles_parent_mobile;\n              break;\n            case \"tablet\":\n              css_styles = pane_fragment?.field_css_styles_tablet;\n              css_styles_parent = pane_fragment?.field_css_styles_parent_tablet;\n              break;\n            case \"desktop\":\n              css_styles = pane_fragment?.field_css_styles_desktop;\n              css_styles_parent =\n                pane_fragment?.field_css_styles_parent_desktop;\n              break;\n          }\n          // render this paneFragment\n          switch (pane_fragment?.internal?.type) {\n            case \"paragraph__markdown\":\n              // get image data (if available)\n              imageData = pane_fragment?.relationships?.field_image?.map(\n                (image) => {\n                  return [\n                    image.id,\n                    image.filename,\n                    image.localFile?.childImageSharp?.gatsbyImageData,\n                  ];\n                }\n              );\n              // replaces images with Gatsby Images and prepares html\n              let htmlAst = sanitize(\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst\n              );\n              react_fragment = MarkdownParagraph(\n                htmlAst,\n                imageData,\n                index,\n                css_styles_parent,\n                css_styles,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_video\":\n              react_fragment = InjectGatsbyBackgroundVideo(\n                pane_fragment?.id,\n                pane_fragment?.field_cdn_url,\n                pane_fragment?.field_alt_text,\n                index,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_image\":\n              imageData = pane_fragment?.relationships?.field_image?.map(\n                (image) => {\n                  let key = data?.viewport?.key;\n                  let this_image_data = image[key];\n                  if (typeof this_image_data !== \"undefined\") {\n                    return this_image_data.childImageSharp?.gatsbyImageData;\n                  }\n                }\n              );\n              react_fragment = InjectGatsbyBackgroundImage(\n                imageData[0],\n                pane_fragment?.field_alt_text,\n                index,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__svg\":\n              alt_text = pane_fragment?.field_svg_file?.description;\n              let publicURL =\n                pane_fragment?.relationships?.field_svg_file?.localFile\n                  ?.publicURL;\n              react_fragment = InjectSvg(\n                publicURL,\n                alt_text,\n                index,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__d3\":\n              //\n              break;\n\n            case \"paragraph__h5p\":\n              //\n              break;\n          }\n          if (data?.prefersReducedMotion) {\n            return (\n              <div className=\"paneFragment\" key={pane_fragment?.id}>\n                {react_fragment}\n              </div>\n            );\n          }\n          // TODO: pull animation payload from actions lisp\n          //\n          // add slight time delay offset for each subsequent pane\n          return (\n            <div className=\"paneFragment\" key={pane_fragment?.id}>\n              <IsVisible\n                payload={{\n                  in: \"fadeInUp\",\n                  out: \"fadeOut\",\n                  speed: \"2\",\n                  delay: 0.25 * i,\n                }}\n              >\n                {react_fragment}\n              </IsVisible>\n            </div>\n          );\n        });\n\n      // compose this pane\n      let pane_height;\n      switch (data?.viewport?.key) {\n        case \"mobile\":\n          pane_height = pane?.field_height_ratio_mobile;\n          break;\n        case \"tablet\":\n          pane_height = pane?.field_height_ratio_tablet;\n          break;\n        case \"desktop\":\n          pane_height = pane?.field_height_ratio_desktop;\n          break;\n      }\n      // skip if empty pane\n      if (Object.keys(composedPane).length === 0) return;\n      let this_css = \"height:\" + parseInt(pane_height) + \"vw;\";\n      if (background_colour.length)\n        this_css =\n          this_css +\n          \" background-color:\" +\n          background_colour[0].field_background_colour +\n          \";\";\n      return (\n        <StyledWrapper\n          key={pane?.id}\n          className={\"pane pane__view--\" + data?.viewport?.key}\n          css={this_css}\n        >\n          {composedPane}\n        </StyledWrapper>\n      );\n    }\n  );\n  // this is the storyFragment\n  return composedPanes;\n}\n\nexport { ComposePanes };\n"],"file":"compose-panes.js"}