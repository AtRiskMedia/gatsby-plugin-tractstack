{"version":3,"file":"compose-panes.js","names":["React","useRef","renderToStaticMarkup","animateScrollTo","IsVisible","MarkdownParagraph","InjectGatsbyBackgroundImage","InjectGatsbyBackgroundVideo","InjectSvg","InjectSvgShape","StyledWrapperDiv","InjectCssAnimation","getCurrentPane","thisViewportValue","SvgPane","ComposePanes","data","state","viewport","key","visiblePane","currentPane","panes","ref","document","getElementById","composedPanes","fragments","relationships","field_panes","map","pane","i","css","imageMaskShapes","textShapeOutsides","background_colour","field_pane_fragments","filter","e","internal","type","this_selector","shape","pane_height","mobile","field_height_ratio_mobile","tablet","field_height_ratio_tablet","desktop","field_height_ratio_desktop","height_offset","field_height_offset_mobile","field_height_offset_tablet","field_height_offset_desktop","imageMaskShapeSelector","this_pane","field_image_mask_shape_mobile","field_image_mask_shape_tablet","field_image_mask_shape_desktop","console","log","selector","paneFragment","id","Boolean","composedPaneFragments","field_hidden_viewports","replace","split","indexOf","sort","a","b","field_zindex","pane_fragment","index","react_fragment","alt_text","imageData","maskData","css_styles","css_styles_parent","field_css_styles_mobile","field_css_styles_tablet","field_css_styles_desktop","field_css_styles_parent_mobile","field_css_styles_parent_tablet","field_css_styles_parent_desktop","field_shape_mobile","field_shape_tablet","field_shape_desktop","has_shape_outside","field_text_shape_outside_mobile","field_text_shape_outside_tablet","field_text_shape_outside_desktop","textShapeOutside","Object","keys","length","left","left_mask","right","right_mask","field_image","this_image","push","filename","action","buttonData","child","childPaneFragment","childMarkdownRemark","htmlAst","children","value","JSON","parse","field_options","buttons","SyntaxError","hooks","field_cdn_url","field_alt_text","field_svg_file","localFile","publicURL","description","thisClass","field_background_colour","svgString","b64","window","btoa","dataUri","effects_payload","prefersReducedMotion","effects","controller","payload","in","function","speed","delay","this_effects_css"],"sources":["src/compose-panes.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport animateScrollTo from \"animated-scroll-to\";\nimport { IsVisible } from \"./is-visible.js\";\nimport {\n  MarkdownParagraph,\n  InjectGatsbyBackgroundImage,\n  InjectGatsbyBackgroundVideo,\n  InjectSvg,\n  InjectSvgShape,\n  StyledWrapperDiv,\n  InjectCssAnimation,\n  getCurrentPane,\n  thisViewportValue,\n} from \"./helpers\";\nimport { SvgPane } from \"./shapes\";\n\nfunction ComposePanes(data) {\n  // if viewport is not yet defined, return empty fragment\n  if (typeof data?.state?.viewport?.viewport?.key === \"undefined\") return <></>;\n\n  // is there a current pane to scroll to?\n  let visiblePane = getCurrentPane(\n    data?.state?.viewport?.currentPane,\n    data?.state?.viewport?.panes\n  );\n  if (visiblePane) {\n    let ref = document.getElementById(visiblePane);\n    if (ref) animateScrollTo(ref);\n  }\n\n  // loop through the panes in view and render each pane fragment\n  const composedPanes = data?.fragments?.relationships?.field_panes.map(\n    (pane, i) => {\n      let css = \"\",\n        imageMaskShapes = {},\n        textShapeOutsides = {};\n      // check for background colour\n      let background_colour = pane?.relationships?.field_pane_fragments.filter(\n        (e) => e?.internal?.type === \"paragraph__background_colour\"\n      );\n      // compose this pane\n      let this_selector, shape;\n      let pane_height = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_mobile} / 100)`,\n          tablet: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_tablet} / 100)`,\n          desktop: `calc((100vw - (var(--offset) * 1px)) * ${pane?.field_height_ratio_desktop} / 100)`,\n        }\n      );\n      let height_offset = thisViewportValue(\n        data?.state?.viewport?.viewport?.key,\n        {\n          mobile: `calc((100vw - (var(--offset) * 1px)) / 600 * ${pane?.field_height_offset_mobile})`,\n          tablet: `calc((100vw - (var(--offset) * 1px)) / 1080 * ${pane?.field_height_offset_tablet})`,\n          desktop: `calc((100vw - (var(--offset) * 1px)) / 1920 * ${pane?.field_height_offset_desktop})`,\n        }\n      );\n      // generate imageMaskShape(s)\n      imageMaskShapes = pane?.relationships?.field_pane_fragments\n        .map((e) => {\n          let imageMaskShapeSelector;\n          let this_pane = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: e?.field_image_mask_shape_mobile,\n              tablet: e?.field_image_mask_shape_tablet,\n              desktop: e?.field_image_mask_shape_desktop,\n            }\n          );\n          if (typeof this_pane === \"string\" && this_pane !== \"none\") {\n            shape = SvgPane(this_pane, data?.state?.viewport?.viewport?.key);\n            switch (e?.internal?.type) {\n              case \"paragraph__background_video\":\n                imageMaskShapeSelector = \".paneFragmentVideo\";\n                break;\n              case \"paragraph__background_image\":\n                imageMaskShapeSelector = \".paneFragmentImage\";\n                break;\n              case \"paragraph__svg\":\n                imageMaskShapeSelector = \".paneFragmentSvg\";\n                break;\n              case \"paragraph__markdown\":\n                imageMaskShapeSelector = \".paneFragmentParagraph\";\n                break;\n              default:\n                console.log(\n                  \"compose-panes.js > imageMaskShapes: miss on\",\n                  e?.internal?.type\n                );\n            }\n          }\n          if (typeof shape === \"undefined\") return null;\n          return {\n            selector: imageMaskShapeSelector,\n            shape: shape,\n            paneFragment: e?.id,\n          };\n        })\n        .filter(Boolean);\n\n      // now compose the paneFragments for this pane\n      let composedPaneFragments = pane?.relationships?.field_pane_fragments\n        // skip if current viewport is listed in field_hidden_viewports\n        .filter(\n          (e) =>\n            e.field_hidden_viewports\n              .replace(/\\s+/g, \"\")\n              .split(\",\")\n              .indexOf(data?.state?.viewport?.viewport?.key) == -1\n        )\n        // already processed background_colour\n        .filter((e) => e?.internal?.type !== \"paragraph__background_colour\")\n        // sort by zIndex ***important\n        .sort((a, b) => (a?.field_zindex > b?.field_zindex ? 1 : -1))\n        .map((pane_fragment, index) => {\n          let react_fragment,\n            alt_text,\n            imageData = [],\n            shape,\n            maskData,\n            css_styles,\n            css_styles_parent;\n\n          // select css for viewport\n          css_styles = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n            mobile: pane_fragment?.field_css_styles_mobile || \"\",\n            tablet: pane_fragment?.field_css_styles_tablet || \"\",\n            desktop: pane_fragment?.field_css_styles_desktop || \"\",\n          });\n          css_styles_parent = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_css_styles_parent_mobile || \"\",\n              tablet: pane_fragment?.field_css_styles_parent_tablet || \"\",\n              desktop: pane_fragment?.field_css_styles_parent_desktop || \"\",\n            }\n          );\n          if (pane_fragment?.internal?.type === \"paragraph__background_pane\")\n            shape = thisViewportValue(data?.state?.viewport?.viewport?.key, {\n              mobile: pane_fragment?.field_shape_mobile,\n              tablet: pane_fragment?.field_shape_tablet,\n              desktop: pane_fragment?.field_shape_desktop,\n            });\n          let has_shape_outside = thisViewportValue(\n            data?.state?.viewport?.viewport?.key,\n            {\n              mobile: pane_fragment?.field_text_shape_outside_mobile,\n              tablet: pane_fragment?.field_text_shape_outside_tablet,\n              desktop: pane_fragment?.field_text_shape_outside_desktop,\n            }\n          );\n          if (has_shape_outside && has_shape_outside !== \"none\") {\n            let textShapeOutside = SvgPane(\n              has_shape_outside,\n              data?.state?.viewport?.viewport?.key,\n              \"shape-outside\"\n            );\n            if (textShapeOutside)\n              maskData = {\n                textShapeOutside: textShapeOutside,\n              };\n            // store and inject into pane\n            textShapeOutsides[Object.keys(textShapeOutsides).length] = {\n              left: textShapeOutside?.left_mask,\n              right: textShapeOutside?.right_mask,\n            };\n          }\n          // prepare any images from this paneFragment\n          pane_fragment?.relationships?.field_image.map((e) => {\n            let this_image = thisViewportValue(\n              data?.state?.viewport?.viewport?.key,\n              {\n                mobile: e?.mobile,\n                tablet: e?.tablet,\n                desktop: e?.desktop,\n              }\n            );\n            if (this_image)\n              imageData.push({\n                id: e?.id,\n                filename: e?.filename,\n                data: this_image,\n              });\n          });\n\n          // render this paneFragment\n          switch (pane_fragment?.internal?.type) {\n            case \"paragraph__markdown\":\n              // now pre-render MarkdownParagraph elements and inject images\n              let action,\n                buttonData = {};\n              let child =\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst;\n              child.children =\n                pane_fragment?.childPaneFragment?.childMarkdownRemark?.htmlAst?.children?.filter(\n                  (e) => !(e.type === \"text\" && e.value === \"\\n\")\n                );\n              try {\n                action = JSON.parse(pane_fragment?.field_options);\n                if (typeof action?.buttons === \"object\")\n                  buttonData = action?.buttons;\n              } catch (e) {\n                if (e instanceof SyntaxError) {\n                  console.log(\"ERROR parsing json in {}: \", e);\n                }\n              }\n              react_fragment = MarkdownParagraph(\n                pane_fragment?.id,\n                child,\n                imageData,\n                buttonData,\n                maskData,\n                css_styles_parent,\n                css_styles,\n                pane_fragment?.field_zindex,\n                data?.hooks\n              );\n              break;\n\n            case \"paragraph__background_pane\":\n              react_fragment = InjectSvgShape(\n                pane_fragment?.id,\n                shape,\n                data?.state?.viewport?.viewport?.key,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_video\":\n              react_fragment = InjectGatsbyBackgroundVideo(\n                pane_fragment?.id,\n                pane_fragment?.field_cdn_url,\n                pane_fragment?.field_alt_text,\n                css_styles_parent,\n                css_styles,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__background_image\":\n              react_fragment = InjectGatsbyBackgroundImage(\n                pane_fragment?.id,\n                pane_fragment?.relationships?.field_image[0] &&\n                  pane_fragment?.relationships?.field_image[0][\n                    data?.state?.viewport?.viewport?.key\n                  ],\n                pane_fragment?.field_alt_text,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__svg\":\n              react_fragment = InjectSvg(\n                pane_fragment?.id,\n                pane_fragment?.relationships?.field_svg_file?.localFile\n                  ?.publicURL,\n                pane_fragment?.field_svg_file?.description,\n                css_styles_parent,\n                pane_fragment?.field_zindex\n              );\n              break;\n\n            case \"paragraph__d3\":\n              //\n              break;\n\n            case \"paragraph__h5p\":\n              //\n              break;\n          }\n          let thisClass = `paneFragment paneFragment__view--${data?.state?.viewport?.viewport?.key}`;\n          return (\n            <div className={thisClass} key={pane_fragment?.id}>\n              <IsVisible\n                id={pane_fragment?.id}\n                className=\"paneFragment\"\n                key={pane_fragment?.id}\n              >\n                {react_fragment}\n              </IsVisible>\n            </div>\n          );\n        });\n\n      // skip if empty pane\n      if (Object.keys(composedPaneFragments).length === 0) return;\n      // prepare css for pane\n      css = `${css} height: ${pane_height}; margin-bottom: ${height_offset};`;\n      if (background_colour.length)\n        css = `${css} background-color: ${background_colour[0].field_background_colour};`;\n      // inject imageMaskShape(s) (if available)\n      if (Object.keys(imageMaskShapes).length)\n        imageMaskShapes.map((e) => {\n          if (typeof e?.shape === \"object\") {\n            let svgString = renderToStaticMarkup(e?.shape);\n            let b64 = window.btoa(svgString);\n            let dataUri = `data:image/svg+xml;base64,${b64}`;\n            css =\n              `${css} ${e?.selector} {-webkit-mask-image: url(\"${dataUri}\"); mask-image: url(\"${dataUri}\");` +\n              ` mask-repeat: no-repeat; -webkit-mask-size: 100% AUTO; mask-size: 100% AUTO; }`;\n          }\n        });\n      // inject textShapeOutside(s) (if available)\n      if (Object.keys(textShapeOutsides).length)\n        Object.keys(textShapeOutsides).map((i) => {\n          css = `${css} .paneFragmentParagraph { .svg-shape-outside-left {float:left;shape-outside:url(${textShapeOutsides[i]?.left})} .svg-shape-outside-right {float:right;shape-outside:url(${textShapeOutsides[i]?.right})} }`;\n        });\n      // may we wrap this in animation?\n      let effects_payload = {};\n      if (data?.state?.prefersReducedMotion?.prefersReducedMotion === false) {\n        let effects = data?.state?.controller?.payload?.effects;\n        let effects_payload;\n        for (const key in effects) {\n          if (effects[key]?.pane === pane?.id) {\n            effects_payload = {\n              in: [\n                effects[key]?.function,\n                effects[key]?.speed,\n                effects[key]?.delay,\n              ],\n            };\n            let this_effects_css = InjectCssAnimation(\n              effects_payload,\n              effects[key]?.paneFragment\n            );\n            css = css + this_effects_css;\n          }\n        }\n      }\n      return (\n        <section key={pane?.id}>\n          <IsVisible id={pane?.id} hooks={data?.hooks}>\n            <StyledWrapperDiv\n              className={`pane pane__view pane__view--${data?.state?.viewport?.viewport?.key}`}\n              css={css}\n            >\n              {composedPaneFragments}\n            </StyledWrapperDiv>\n          </IsVisible>\n        </section>\n      );\n    }\n  );\n  // this is the storyFragment\n  return composedPanes;\n}\n\nexport { ComposePanes };\n"],"mappings":"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"}