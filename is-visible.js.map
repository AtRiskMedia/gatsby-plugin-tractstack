{"version":3,"sources":["src/is-visible.js"],"names":["React","useRef","useIsVisible","StyledWrapper","css","animationIn","animationOut","animationSpeed","animationDelay","IsVisible","props","nodeRef","isVisible","class_is_visible","payload","in","out","speed","delay","children"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,aAAT,QAA8B,WAA9B;;AAEA,MAAMC,GAAG,GAAG,CAACC,WAAD,EAAcC,YAAd,EAA4BC,cAA5B,EAA4CC,cAA5C,KAA+D;AACzE,SACG;AACL;AACA,wBAFI,GAGAA,cAHA,GAIC;AACL,2BALI,GAMAD,cANA,GAOC;AACL;AACA,mCATI,GAUAA,cAVA,GAWC;AACL;AACA,uBAbI,GAcAF,WAdA,GAeC;AACL,iCAhBI,GAiBAA,WAjBA,GAkBC;AACL;AACA;AACA,2BArBI,GAsBAE,cAtBA,GAuBC;AACL;AACA,mCAzBI,GA0BAA,cA1BA,GA2BC;AACL;AACA,uBA7BI,GA8BAD,YA9BA,GA+BC;AACL,iCAhCI,GAiCAA,YAjCA,GAkCC;AACL,MApCE;AAsCD,CAvCD;;AAyCA,MAAMG,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,OAAO,GAAGV,MAAM,EAAtB;AACA,QAAMW,SAAS,GAAGV,YAAY,CAACS,OAAD,CAA9B;AACA,MAAIE,gBAAgB,GAAG,WAAvB;;AACA,MAAID,SAAJ,EAAe;AACbC,IAAAA,gBAAgB,GAAG,UAAnB;AACD;;AACD,sBACE,oBAAC,aAAD;AACE,IAAA,GAAG,EAAET,GAAG,CACNM,KAAK,EAAEI,OAAP,EAAgBC,EADV,EAENL,KAAK,EAAEI,OAAP,EAAgBE,GAFV,EAGNN,KAAK,EAAEI,OAAP,EAAgBG,KAHV,EAINP,KAAK,EAAEI,OAAP,EAAgBI,KAJV;AADV,kBAQE;AAAK,IAAA,GAAG,EAAEP,OAAV;AAAmB,IAAA,SAAS,EAAEE,gBAAgB,GAAG;AAAjD,KACGH,KAAK,CAACS,QADT,CARF,CADF;AAcD,CArBD;;AAuBA,SAASV,SAAT","sourcesContent":["import React, { useRef } from \"react\";\nimport { useIsVisible } from \"react-is-visible\";\nimport { StyledWrapper } from \"./helpers\";\n\nconst css = (animationIn, animationOut, animationSpeed, animationDelay) => {\n  return (\n    `.onscreen {\n      opacity: 0;\n      animation-delay: ` +\n    animationDelay +\n    `s;\n      animation-duration: ` +\n    animationSpeed +\n    `s;\n      animation-fill-mode: both;\n      -webkit-animation-duration: ` +\n    animationSpeed +\n    `s;\n      -webkit-animation-fill-mode: both\n      animation-name: ` +\n    animationIn +\n    `;\n        -webkit-animation-name: ` +\n    animationIn +\n    `;\n    }\n    .offscreen {\n      animation-duration: ` +\n    animationSpeed +\n    `s;\n      animation-fill-mode: both;\n      -webkit-animation-duration: ` +\n    animationSpeed +\n    `s;\n      -webkit-animation-fill-mode: both\n      animation-name: ` +\n    animationOut +\n    `;\n        -webkit-animation-name: ` +\n    animationOut +\n    `;\n    }`\n  );\n};\n\nconst IsVisible = (props) => {\n  const nodeRef = useRef();\n  const isVisible = useIsVisible(nodeRef);\n  let class_is_visible = \"offscreen\";\n  if (isVisible) {\n    class_is_visible = \"onscreen\";\n  }\n  return (\n    <StyledWrapper\n      css={css(\n        props?.payload?.in,\n        props?.payload?.out,\n        props?.payload?.speed,\n        props?.payload?.delay\n      )}\n    >\n      <div ref={nodeRef} className={class_is_visible + \" reveal\"}>\n        {props.children}\n      </div>\n    </StyledWrapper>\n  );\n};\n\nexport { IsVisible };\n"],"file":"is-visible.js"}